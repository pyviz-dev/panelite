{"version":3,"file":"5261.8866e73.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/attachmentmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/latex.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/renderers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/widgets.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/factories.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/mimemodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/outputmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/registry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/rendermime/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/InlineLexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/Lexer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/Parser.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/Renderer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/Slugger.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/TextRenderer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/defaults.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/helpers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/marked.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/marked/src/rules.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash.escape/index.js"],"sourcesContent":["/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { ObservableJSON } from '@jupyterlab/observables';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\n/**\n * The default implementation of a notebook attachment model.\n */\nexport class AttachmentModel {\n    /**\n     * Construct a new attachment model.\n     */\n    constructor(options) {\n        // All attachments are untrusted\n        this.trusted = false;\n        this._changed = new Signal(this);\n        this._raw = {};\n        const data = Private.getData(options.value);\n        this._data = new ObservableJSON({ values: data });\n        this._rawData = data;\n        // Make a copy of the data.\n        const value = options.value;\n        for (const key in value) {\n            // Ignore data and metadata that were stripped.\n            switch (key) {\n                case 'data':\n                    break;\n                default:\n                    this._raw[key] = Private.extract(value, key);\n            }\n        }\n    }\n    /**\n     * A signal emitted when the attachment model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources used by the attachment model.\n     */\n    dispose() {\n        this._data.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._rawData;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return {};\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        if (options.data) {\n            this._updateObservable(this._data, options.data);\n            this._rawData = options.data;\n        }\n        this._changed.emit(void 0);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const attachment = {};\n        for (const key in this._raw) {\n            attachment[key] = Private.extract(this._raw, key);\n        }\n        return attachment;\n    }\n    /**\n     * Update an observable JSON object using a readonly JSON object.\n     */\n    _updateObservable(observable, data) {\n        const oldKeys = observable.keys();\n        const newKeys = Object.keys(data);\n        // Handle removed keys.\n        for (const key of oldKeys) {\n            if (newKeys.indexOf(key) === -1) {\n                observable.delete(key);\n            }\n        }\n        // Handle changed data.\n        for (const key of newKeys) {\n            const oldValue = observable.get(key);\n            const newValue = data[key];\n            if (oldValue !== newValue) {\n                observable.set(key, newValue);\n            }\n        }\n    }\n}\n/**\n * The namespace for AttachmentModel statics.\n */\n(function (AttachmentModel) {\n    /**\n     * Get the data for an attachment.\n     *\n     * @params bundle - A kernel attachment MIME bundle.\n     *\n     * @returns - The data for the payload.\n     */\n    function getData(bundle) {\n        return Private.getData(bundle);\n    }\n    AttachmentModel.getData = getData;\n})(AttachmentModel || (AttachmentModel = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the data from a notebook attachment.\n     */\n    function getData(bundle) {\n        return convertBundle(bundle);\n    }\n    Private.getData = getData;\n    /**\n     * Get the bundle options given attachment model options.\n     */\n    function getBundleOptions(options) {\n        const data = getData(options.value);\n        return { data };\n    }\n    Private.getBundleOptions = getBundleOptions;\n    /**\n     * Extract a value from a JSONObject.\n     */\n    function extract(value, key) {\n        const item = value[key];\n        if (item === undefined || JSONExt.isPrimitive(item)) {\n            return item;\n        }\n        return JSONExt.deepCopy(item);\n    }\n    Private.extract = extract;\n    /**\n     * Convert a mime bundle to mime data.\n     */\n    function convertBundle(bundle) {\n        const map = Object.create(null);\n        for (const mimeType in bundle) {\n            map[mimeType] = extract(bundle, mimeType);\n        }\n        return map;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=attachmentmodel.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\n// Some magic for deferring mathematical expressions to MathJax\n// by hiding them from the Markdown parser.\n// Some of the code here is adapted with permission from Davide Cervone\n// under the terms of the Apache2 license governing the MathJax project.\n// Other minor modifications are also due to StackExchange and are used with\n// permission.\nconst inline = '$'; // the inline math delimiter\n// MATHSPLIT contains the pattern for math delimiters and special symbols\n// needed for searching for math in the text input.\nconst MATHSPLIT = /(\\$\\$?|\\\\(?:begin|end)\\{[a-z]*\\*?\\}|\\\\[{}$]|[{}]|(?:\\n\\s*)+|@@\\d+@@|\\\\\\\\(?:\\(|\\)|\\[|\\]))/i;\n/**\n *  Break up the text into its component parts and search\n *    through them for math delimiters, braces, linebreaks, etc.\n *  Math delimiters must match and braces must balance.\n *  Don't allow math to pass through a double linebreak\n *    (which will be a paragraph).\n */\nexport function removeMath(text) {\n    const math = []; // stores math strings for later\n    let start = null;\n    let end = null;\n    let last = null;\n    let braces = 0;\n    let deTilde;\n    // Except for extreme edge cases, this should catch precisely those pieces of the markdown\n    // source that will later be turned into code spans. While MathJax will not TeXify code spans,\n    // we still have to consider them at this point; the following issue has happened several times:\n    //\n    //     `$foo` and `$bar` are variables.  -->  <code>$foo ` and `$bar</code> are variables.\n    const hasCodeSpans = /`/.test(text);\n    if (hasCodeSpans) {\n        text = text\n            .replace(/~/g, '~T')\n            .replace(/(^|[^\\\\])(`+)([^\\n]*?[^`\\n])\\2(?!`)/gm, wholematch => wholematch.replace(/\\$/g, '~D'));\n        deTilde = (text) => {\n            return text.replace(/~([TD])/g, (wholematch, character) => character === 'T' ? '~' : inline);\n        };\n    }\n    else {\n        deTilde = (text) => {\n            return text;\n        };\n    }\n    let blocks = text.replace(/\\r\\n?/g, '\\n').split(MATHSPLIT);\n    for (let i = 1, m = blocks.length; i < m; i += 2) {\n        const block = blocks[i];\n        if (block.charAt(0) === '@') {\n            //\n            //  Things that look like our math markers will get\n            //  stored and then retrieved along with the math.\n            //\n            blocks[i] = '@@' + math.length + '@@';\n            math.push(block);\n        }\n        else if (start !== null) {\n            //\n            //  If we are in math, look for the end delimiter,\n            //    but don't go past double line breaks, and\n            //    and balance braces within the math.\n            //\n            if (block === end) {\n                if (braces) {\n                    last = i;\n                }\n                else {\n                    blocks = processMath(start, i, deTilde, math, blocks);\n                    start = null;\n                    end = null;\n                    last = null;\n                }\n            }\n            else if (block.match(/\\n.*\\n/)) {\n                if (last !== null) {\n                    i = last;\n                    blocks = processMath(start, i, deTilde, math, blocks);\n                }\n                start = null;\n                end = null;\n                last = null;\n                braces = 0;\n            }\n            else if (block === '{') {\n                braces++;\n            }\n            else if (block === '}' && braces) {\n                braces--;\n            }\n        }\n        else {\n            //\n            //  Look for math start delimiters and when\n            //    found, set up the end delimiter.\n            //\n            if (block === inline || block === '$$') {\n                start = i;\n                end = block;\n                braces = 0;\n            }\n            else if (block === '\\\\\\\\(' || block === '\\\\\\\\[') {\n                start = i;\n                end = block.slice(-1) === '(' ? '\\\\\\\\)' : '\\\\\\\\]';\n                braces = 0;\n            }\n            else if (block.substr(1, 5) === 'begin') {\n                start = i;\n                end = '\\\\end' + block.substr(6);\n                braces = 0;\n            }\n        }\n    }\n    if (start !== null && last !== null) {\n        blocks = processMath(start, last, deTilde, math, blocks);\n        start = null;\n        end = null;\n        last = null;\n    }\n    return { text: deTilde(blocks.join('')), math };\n}\n/**\n * Put back the math strings that were saved,\n * and clear the math array (no need to keep it around).\n */\nexport function replaceMath(text, math) {\n    /**\n     * Replace a math placeholder with its corresponding group.\n     * The math delimiters \"\\\\(\", \"\\\\[\", \"\\\\)\" and \"\\\\]\" are replaced\n     * removing one backslash in order to be interpreted correctly by MathJax.\n     */\n    const process = (match, n) => {\n        let group = math[n];\n        if (group.substr(0, 3) === '\\\\\\\\(' &&\n            group.substr(group.length - 3) === '\\\\\\\\)') {\n            group = '\\\\(' + group.substring(3, group.length - 3) + '\\\\)';\n        }\n        else if (group.substr(0, 3) === '\\\\\\\\[' &&\n            group.substr(group.length - 3) === '\\\\\\\\]') {\n            group = '\\\\[' + group.substring(3, group.length - 3) + '\\\\]';\n        }\n        return group;\n    };\n    // Replace all the math group placeholders in the text\n    // with the saved strings.\n    return text.replace(/@@(\\d+)@@/g, process);\n}\n/**\n * Process math blocks.\n *\n * The math is in blocks i through j, so\n *   collect it into one block and clear the others.\n *  Replace &, <, and > by named entities.\n *  For IE, put <br> at the ends of comments since IE removes \\n.\n *  Clear the current math positions and store the index of the\n *   math, then push the math string onto the storage array.\n *  The preProcess function is called on all blocks if it has been passed in\n */\nfunction processMath(i, j, preProcess, math, blocks) {\n    let block = blocks\n        .slice(i, j + 1)\n        .join('')\n        .replace(/&/g, '&amp;') // use HTML entity for &\n        .replace(/</g, '&lt;') // use HTML entity for <\n        .replace(/>/g, '&gt;'); // use HTML entity for >\n    if (navigator && navigator.appName === 'Microsoft Internet Explorer') {\n        block = block.replace(/(%[^\\n]*)\\n/g, '$1<br/>\\n');\n    }\n    while (j > i) {\n        blocks[j] = '';\n        j--;\n    }\n    blocks[i] = '@@' + math.length + '@@'; // replace the current block text with a unique tag to find later\n    if (preProcess) {\n        block = preProcess(block);\n    }\n    math.push(block);\n    return blocks;\n}\n//# sourceMappingURL=latex.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport marked from 'marked';\nimport { Mode, CodeMirrorEditor } from '@jupyterlab/codemirror';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { toArray } from '@lumino/algorithm';\nimport escape from 'lodash.escape';\nimport { removeMath, replaceMath } from './latex';\n/**\n * Render HTML into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderHTML(options) {\n    // Unpack the options.\n    let { host, source, trusted, sanitizer, resolver, linkHandler, shouldTypeset, latexTypesetter } = options;\n    let originalSource = source;\n    // Bail early if the source is empty.\n    if (!source) {\n        host.textContent = '';\n        return Promise.resolve(undefined);\n    }\n    // Sanitize the source if it is not trusted. This removes all\n    // `<script>` tags as well as other potentially harmful HTML.\n    if (!trusted) {\n        originalSource = `${source}`;\n        source = sanitizer.sanitize(source);\n    }\n    // Set the inner HTML of the host.\n    host.innerHTML = source;\n    if (host.getElementsByTagName('script').length > 0) {\n        // If output it trusted, eval any script tags contained in the HTML.\n        // This is not done automatically by the browser when script tags are\n        // created by setting `innerHTML`.\n        if (trusted) {\n            Private.evalInnerHTMLScriptTags(host);\n        }\n        else {\n            const container = document.createElement('div');\n            const warning = document.createElement('pre');\n            warning.textContent =\n                'This HTML output contains inline scripts. Are you sure that you want to run arbitrary Javascript within your JupyterLab session?';\n            const runButton = document.createElement('button');\n            runButton.textContent = 'Run';\n            runButton.onclick = event => {\n                host.innerHTML = originalSource;\n                Private.evalInnerHTMLScriptTags(host);\n                if (host.firstChild) {\n                    host.removeChild(host.firstChild);\n                }\n            };\n            container.appendChild(warning);\n            container.appendChild(runButton);\n            host.insertBefore(container, host.firstChild);\n        }\n    }\n    // Handle default behavior of nodes.\n    Private.handleDefaults(host, resolver);\n    // Patch the urls if a resolver is available.\n    let promise;\n    if (resolver) {\n        promise = Private.handleUrls(host, resolver, linkHandler);\n    }\n    else {\n        promise = Promise.resolve(undefined);\n    }\n    // Return the final rendered promise.\n    return promise.then(() => {\n        if (shouldTypeset && latexTypesetter) {\n            latexTypesetter.typeset(host);\n        }\n    });\n}\n/**\n * Render an image into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderImage(options) {\n    // Unpack the options.\n    const { host, mimeType, source, width, height, needsBackground, unconfined } = options;\n    // Clear the content in the host.\n    host.textContent = '';\n    // Create the image element.\n    const img = document.createElement('img');\n    // Set the source of the image.\n    img.src = `data:${mimeType};base64,${source}`;\n    // Set the size of the image if provided.\n    if (typeof height === 'number') {\n        img.height = height;\n    }\n    if (typeof width === 'number') {\n        img.width = width;\n    }\n    if (needsBackground === 'light') {\n        img.classList.add('jp-needs-light-background');\n    }\n    else if (needsBackground === 'dark') {\n        img.classList.add('jp-needs-dark-background');\n    }\n    if (unconfined === true) {\n        img.classList.add('jp-mod-unconfined');\n    }\n    // Add the image to the host.\n    host.appendChild(img);\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * Render LaTeX into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderLatex(options) {\n    // Unpack the options.\n    const { host, source, shouldTypeset, latexTypesetter } = options;\n    // Set the source on the node.\n    host.textContent = source;\n    // Typeset the node if needed.\n    if (shouldTypeset && latexTypesetter) {\n        latexTypesetter.typeset(host);\n    }\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * Render Markdown into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport async function renderMarkdown(options) {\n    // Unpack the options.\n    const { host, source } = options, others = __rest(options, [\"host\", \"source\"]);\n    // Clear the content if there is no source.\n    if (!source) {\n        host.textContent = '';\n        return;\n    }\n    // Separate math from normal markdown text.\n    const parts = removeMath(source);\n    // Convert the markdown to HTML.\n    let html = await Private.renderMarked(parts['text']);\n    // Replace math.\n    html = replaceMath(html, parts['math']);\n    // Render HTML.\n    await renderHTML(Object.assign({ host, source: html }, others));\n    // Apply ids to the header nodes.\n    Private.headerAnchors(host);\n}\n/**\n * Render SVG into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderSVG(options) {\n    // Unpack the options.\n    let { host, source, trusted, unconfined } = options;\n    // Clear the content if there is no source.\n    if (!source) {\n        host.textContent = '';\n        return Promise.resolve(undefined);\n    }\n    // Display a message if the source is not trusted.\n    if (!trusted) {\n        host.textContent =\n            'Cannot display an untrusted SVG. Maybe you need to run the cell?';\n        return Promise.resolve(undefined);\n    }\n    // Add missing SVG namespace (if actually missing)\n    const patt = '<svg[^>]+xmlns=[^>]+svg';\n    if (source.search(patt) < 0) {\n        source = source.replace('<svg', '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n    }\n    // Render in img so that user can save it easily\n    const img = new Image();\n    img.src = `data:image/svg+xml,${encodeURIComponent(source)}`;\n    host.appendChild(img);\n    if (unconfined === true) {\n        host.classList.add('jp-mod-unconfined');\n    }\n    return Promise.resolve();\n}\n/**\n * Replace URLs with links.\n *\n * @param content - The plain text content.\n *\n * @returns The content where all URLs have been replaced with corresponding links.\n */\nfunction autolink(content) {\n    // Taken from Visual Studio Code:\n    // https://github.com/microsoft/vscode/blob/9f709d170b06e991502153f281ec3c012add2e42/src/vs/workbench/contrib/debug/browser/linkDetector.ts#L17-L18\n    const controlCodes = '\\\\u0000-\\\\u0020\\\\u007f-\\\\u009f';\n    const webLinkRegex = new RegExp('(?:[a-zA-Z][a-zA-Z0-9+.-]{2,}:\\\\/\\\\/|data:|www\\\\.)[^\\\\s' +\n        controlCodes +\n        '\"]{2,}[^\\\\s' +\n        controlCodes +\n        '\"\\'(){}\\\\[\\\\],:;.!?]', 'ug');\n    return content.replace(webLinkRegex, url => {\n        // Special case when the URL ends with \">\" or \"<\"\n        const lastChars = url.slice(-3);\n        const endsWithGtLt = ['&gt', '&lt'].indexOf(lastChars) !== -1;\n        const toAppend = endsWithGtLt ? lastChars : '';\n        const len = endsWithGtLt ? url.length - 3 : url.length;\n        return (`<a href=\"${url.slice(0, len)}\" rel=\"noopener\" target=\"_blank\">` +\n            `${url.slice(0, len)}</a>${toAppend}`);\n    });\n}\n/**\n * Render text into a host node.\n *\n * @params options - The options for rendering.\n *\n * @returns A promise which resolves when rendering is complete.\n */\nexport function renderText(options) {\n    // Unpack the options.\n    const { host, sanitizer, source } = options;\n    // Create the HTML content.\n    const content = sanitizer.sanitize(Private.ansiSpan(source), {\n        allowedTags: ['span']\n    });\n    // Set the sanitized content for the host node.\n    const pre = document.createElement('pre');\n    pre.innerHTML = autolink(content);\n    host.appendChild(pre);\n    // Return the rendered promise.\n    return Promise.resolve(undefined);\n}\n/**\n * The namespace for module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Eval the script tags contained in a host populated by `innerHTML`.\n     *\n     * When script tags are created via `innerHTML`, the browser does not\n     * evaluate them when they are added to the page. This function works\n     * around that by creating new equivalent script nodes manually, and\n     * replacing the originals.\n     */\n    function evalInnerHTMLScriptTags(host) {\n        // Create a snapshot of the current script nodes.\n        const scripts = toArray(host.getElementsByTagName('script'));\n        // Loop over each script node.\n        for (const script of scripts) {\n            // Skip any scripts which no longer have a parent.\n            if (!script.parentNode) {\n                continue;\n            }\n            // Create a new script node which will be clone.\n            const clone = document.createElement('script');\n            // Copy the attributes into the clone.\n            const attrs = script.attributes;\n            for (let i = 0, n = attrs.length; i < n; ++i) {\n                const { name, value } = attrs[i];\n                clone.setAttribute(name, value);\n            }\n            // Copy the text content into the clone.\n            clone.textContent = script.textContent;\n            // Replace the old script in the parent.\n            script.parentNode.replaceChild(clone, script);\n        }\n    }\n    Private.evalInnerHTMLScriptTags = evalInnerHTMLScriptTags;\n    /**\n     * Render markdown for the specified content.\n     *\n     * @param content - The string of markdown to render.\n     *\n     * @return A promise which resolves with the rendered content.\n     */\n    function renderMarked(content) {\n        initializeMarked();\n        return new Promise((resolve, reject) => {\n            marked(content, (err, content) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(content);\n                }\n            });\n        });\n    }\n    Private.renderMarked = renderMarked;\n    /**\n     * Handle the default behavior of nodes.\n     */\n    function handleDefaults(node, resolver) {\n        // Handle anchor elements.\n        const anchors = node.getElementsByTagName('a');\n        for (let i = 0; i < anchors.length; i++) {\n            const el = anchors[i];\n            // skip when processing a elements inside svg\n            // which are of type SVGAnimatedString\n            if (!(el instanceof HTMLAnchorElement)) {\n                continue;\n            }\n            const path = el.href;\n            const isLocal = resolver && resolver.isLocal\n                ? resolver.isLocal(path)\n                : URLExt.isLocal(path);\n            // set target attribute if not already present\n            if (!el.target) {\n                el.target = isLocal ? '_self' : '_blank';\n            }\n            // set rel as 'noopener' for non-local anchors\n            if (!isLocal) {\n                el.rel = 'noopener';\n            }\n        }\n        // Handle image elements.\n        const imgs = node.getElementsByTagName('img');\n        for (let i = 0; i < imgs.length; i++) {\n            if (!imgs[i].alt) {\n                imgs[i].alt = 'Image';\n            }\n        }\n    }\n    Private.handleDefaults = handleDefaults;\n    /**\n     * Resolve the relative urls in element `src` and `href` attributes.\n     *\n     * @param node - The head html element.\n     *\n     * @param resolver - A url resolver.\n     *\n     * @param linkHandler - An optional link handler for nodes.\n     *\n     * @returns a promise fulfilled when the relative urls have been resolved.\n     */\n    function handleUrls(node, resolver, linkHandler) {\n        // Set up an array to collect promises.\n        const promises = [];\n        // Handle HTML Elements with src attributes.\n        const nodes = node.querySelectorAll('*[src]');\n        for (let i = 0; i < nodes.length; i++) {\n            promises.push(handleAttr(nodes[i], 'src', resolver));\n        }\n        // Handle anchor elements.\n        const anchors = node.getElementsByTagName('a');\n        for (let i = 0; i < anchors.length; i++) {\n            promises.push(handleAnchor(anchors[i], resolver, linkHandler));\n        }\n        // Handle link elements.\n        const links = node.getElementsByTagName('link');\n        for (let i = 0; i < links.length; i++) {\n            promises.push(handleAttr(links[i], 'href', resolver));\n        }\n        // Wait on all promises.\n        return Promise.all(promises).then(() => undefined);\n    }\n    Private.handleUrls = handleUrls;\n    /**\n     * Apply ids to headers.\n     */\n    function headerAnchors(node) {\n        var _a;\n        const headerNames = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n        for (const headerType of headerNames) {\n            const headers = node.getElementsByTagName(headerType);\n            for (let i = 0; i < headers.length; i++) {\n                const header = headers[i];\n                header.id = (_a = header.textContent, (_a !== null && _a !== void 0 ? _a : '')).replace(/ /g, '-');\n                const anchor = document.createElement('a');\n                anchor.target = '_self';\n                anchor.textContent = '¶';\n                anchor.href = '#' + header.id;\n                anchor.classList.add('jp-InternalAnchorLink');\n                header.appendChild(anchor);\n            }\n        }\n    }\n    Private.headerAnchors = headerAnchors;\n    /**\n     * Handle a node with a `src` or `href` attribute.\n     */\n    function handleAttr(node, name, resolver) {\n        const source = node.getAttribute(name) || '';\n        const isLocal = resolver.isLocal\n            ? resolver.isLocal(source)\n            : URLExt.isLocal(source);\n        if (!source || !isLocal) {\n            return Promise.resolve(undefined);\n        }\n        node.setAttribute(name, '');\n        return resolver\n            .resolveUrl(source)\n            .then(urlPath => {\n            return resolver.getDownloadUrl(urlPath);\n        })\n            .then(url => {\n            // Check protocol again in case it changed:\n            if (URLExt.parse(url).protocol !== 'data:') {\n                // Bust caching for local src attrs.\n                // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n            }\n            node.setAttribute(name, url);\n        })\n            .catch(err => {\n            // If there was an error getting the url,\n            // just make it an empty link.\n            node.setAttribute(name, '');\n        });\n    }\n    /**\n     * Handle an anchor node.\n     */\n    function handleAnchor(anchor, resolver, linkHandler) {\n        // Get the link path without the location prepended.\n        // (e.g. \"./foo.md#Header 1\" vs \"http://localhost:8888/foo.md#Header 1\")\n        let href = anchor.getAttribute('href') || '';\n        const isLocal = resolver.isLocal\n            ? resolver.isLocal(href)\n            : URLExt.isLocal(href);\n        // Bail if it is not a file-like url.\n        if (!href || !isLocal) {\n            return Promise.resolve(undefined);\n        }\n        // Remove the hash until we can handle it.\n        const hash = anchor.hash;\n        if (hash) {\n            // Handle internal link in the file.\n            if (hash === href) {\n                anchor.target = '_self';\n                return Promise.resolve(undefined);\n            }\n            // For external links, remove the hash until we have hash handling.\n            href = href.replace(hash, '');\n        }\n        // Get the appropriate file path.\n        return resolver\n            .resolveUrl(href)\n            .then(urlPath => {\n            // decode encoded url from url to api path\n            const path = decodeURI(urlPath);\n            // Handle the click override.\n            if (linkHandler) {\n                linkHandler.handleLink(anchor, path, hash);\n            }\n            // Get the appropriate file download path.\n            return resolver.getDownloadUrl(urlPath);\n        })\n            .then(url => {\n            // Set the visible anchor.\n            anchor.href = url + hash;\n        })\n            .catch(err => {\n            // If there was an error getting the url,\n            // just make it an empty link.\n            anchor.href = '';\n        });\n    }\n    let markedInitialized = false;\n    /**\n     * Support GitHub flavored Markdown, leave sanitizing to external library.\n     */\n    function initializeMarked() {\n        if (markedInitialized) {\n            return;\n        }\n        markedInitialized = true;\n        marked.setOptions({\n            gfm: true,\n            sanitize: false,\n            // breaks: true; We can't use GFM breaks as it causes problems with tables\n            langPrefix: `cm-s-${CodeMirrorEditor.defaultConfig.theme} language-`,\n            highlight: (code, lang, callback) => {\n                const cb = (err, code) => {\n                    if (callback) {\n                        callback(err, code);\n                    }\n                    return code;\n                };\n                if (!lang) {\n                    // no language, no highlight\n                    return cb(null, code);\n                }\n                Mode.ensure(lang)\n                    .then(spec => {\n                    const el = document.createElement('div');\n                    if (!spec) {\n                        console.error(`No CodeMirror mode: ${lang}`);\n                        return cb(null, code);\n                    }\n                    try {\n                        Mode.run(code, spec.mime, el);\n                        return cb(null, el.innerHTML);\n                    }\n                    catch (err) {\n                        console.error(`Failed to highlight ${lang} code`, err);\n                        return cb(err, code);\n                    }\n                })\n                    .catch(err => {\n                    console.error(`No CodeMirror mode: ${lang}`);\n                    console.error(`Require CodeMirror mode error: ${err}`);\n                    return cb(null, code);\n                });\n                return code;\n            }\n        });\n    }\n    const ANSI_COLORS = [\n        'ansi-black',\n        'ansi-red',\n        'ansi-green',\n        'ansi-yellow',\n        'ansi-blue',\n        'ansi-magenta',\n        'ansi-cyan',\n        'ansi-white',\n        'ansi-black-intense',\n        'ansi-red-intense',\n        'ansi-green-intense',\n        'ansi-yellow-intense',\n        'ansi-blue-intense',\n        'ansi-magenta-intense',\n        'ansi-cyan-intense',\n        'ansi-white-intense'\n    ];\n    /**\n     * Create HTML tags for a string with given foreground, background etc. and\n     * add them to the `out` array.\n     */\n    function pushColoredChunk(chunk, fg, bg, bold, underline, inverse, out) {\n        if (chunk) {\n            const classes = [];\n            const styles = [];\n            if (bold && typeof fg === 'number' && 0 <= fg && fg < 8) {\n                fg += 8; // Bold text uses \"intense\" colors\n            }\n            if (inverse) {\n                [fg, bg] = [bg, fg];\n            }\n            if (typeof fg === 'number') {\n                classes.push(ANSI_COLORS[fg] + '-fg');\n            }\n            else if (fg.length) {\n                styles.push(`color: rgb(${fg})`);\n            }\n            else if (inverse) {\n                classes.push('ansi-default-inverse-fg');\n            }\n            if (typeof bg === 'number') {\n                classes.push(ANSI_COLORS[bg] + '-bg');\n            }\n            else if (bg.length) {\n                styles.push(`background-color: rgb(${bg})`);\n            }\n            else if (inverse) {\n                classes.push('ansi-default-inverse-bg');\n            }\n            if (bold) {\n                classes.push('ansi-bold');\n            }\n            if (underline) {\n                classes.push('ansi-underline');\n            }\n            if (classes.length || styles.length) {\n                out.push('<span');\n                if (classes.length) {\n                    out.push(` class=\"${classes.join(' ')}\"`);\n                }\n                if (styles.length) {\n                    out.push(` style=\"${styles.join('; ')}\"`);\n                }\n                out.push('>');\n                out.push(chunk);\n                out.push('</span>');\n            }\n            else {\n                out.push(chunk);\n            }\n        }\n    }\n    /**\n     * Convert ANSI extended colors to R/G/B triple.\n     */\n    function getExtendedColors(numbers) {\n        let r;\n        let g;\n        let b;\n        const n = numbers.shift();\n        if (n === 2 && numbers.length >= 3) {\n            // 24-bit RGB\n            r = numbers.shift();\n            g = numbers.shift();\n            b = numbers.shift();\n            if ([r, g, b].some(c => c < 0 || 255 < c)) {\n                throw new RangeError('Invalid range for RGB colors');\n            }\n        }\n        else if (n === 5 && numbers.length >= 1) {\n            // 256 colors\n            const idx = numbers.shift();\n            if (idx < 0) {\n                throw new RangeError('Color index must be >= 0');\n            }\n            else if (idx < 16) {\n                // 16 default terminal colors\n                return idx;\n            }\n            else if (idx < 232) {\n                // 6x6x6 color cube, see https://stackoverflow.com/a/27165165/500098\n                r = Math.floor((idx - 16) / 36);\n                r = r > 0 ? 55 + r * 40 : 0;\n                g = Math.floor(((idx - 16) % 36) / 6);\n                g = g > 0 ? 55 + g * 40 : 0;\n                b = (idx - 16) % 6;\n                b = b > 0 ? 55 + b * 40 : 0;\n            }\n            else if (idx < 256) {\n                // grayscale, see https://stackoverflow.com/a/27165165/500098\n                r = g = b = (idx - 232) * 10 + 8;\n            }\n            else {\n                throw new RangeError('Color index must be < 256');\n            }\n        }\n        else {\n            throw new RangeError('Invalid extended color specification');\n        }\n        return [r, g, b];\n    }\n    /**\n     * Transform ANSI color escape codes into HTML <span> tags with CSS\n     * classes such as \"ansi-green-intense-fg\".\n     * The actual colors used are set in the CSS file.\n     * This also removes non-color escape sequences.\n     * This is supposed to have the same behavior as nbconvert.filters.ansi2html()\n     */\n    function ansiSpan(str) {\n        const ansiRe = /\\x1b\\[(.*?)([@-~])/g;\n        let fg = [];\n        let bg = [];\n        let bold = false;\n        let underline = false;\n        let inverse = false;\n        let match;\n        const out = [];\n        const numbers = [];\n        let start = 0;\n        str = escape(str);\n        str += '\\x1b[m'; // Ensure markup for trailing text\n        // tslint:disable-next-line\n        while ((match = ansiRe.exec(str))) {\n            if (match[2] === 'm') {\n                const items = match[1].split(';');\n                for (let i = 0; i < items.length; i++) {\n                    const item = items[i];\n                    if (item === '') {\n                        numbers.push(0);\n                    }\n                    else if (item.search(/^\\d+$/) !== -1) {\n                        numbers.push(parseInt(item, 10));\n                    }\n                    else {\n                        // Ignored: Invalid color specification\n                        numbers.length = 0;\n                        break;\n                    }\n                }\n            }\n            else {\n                // Ignored: Not a color code\n            }\n            const chunk = str.substring(start, match.index);\n            pushColoredChunk(chunk, fg, bg, bold, underline, inverse, out);\n            start = ansiRe.lastIndex;\n            while (numbers.length) {\n                const n = numbers.shift();\n                switch (n) {\n                    case 0:\n                        fg = bg = [];\n                        bold = false;\n                        underline = false;\n                        inverse = false;\n                        break;\n                    case 1:\n                    case 5:\n                        bold = true;\n                        break;\n                    case 4:\n                        underline = true;\n                        break;\n                    case 7:\n                        inverse = true;\n                        break;\n                    case 21:\n                    case 22:\n                        bold = false;\n                        break;\n                    case 24:\n                        underline = false;\n                        break;\n                    case 27:\n                        inverse = false;\n                        break;\n                    case 30:\n                    case 31:\n                    case 32:\n                    case 33:\n                    case 34:\n                    case 35:\n                    case 36:\n                    case 37:\n                        fg = n - 30;\n                        break;\n                    case 38:\n                        try {\n                            fg = getExtendedColors(numbers);\n                        }\n                        catch (e) {\n                            numbers.length = 0;\n                        }\n                        break;\n                    case 39:\n                        fg = [];\n                        break;\n                    case 40:\n                    case 41:\n                    case 42:\n                    case 43:\n                    case 44:\n                    case 45:\n                    case 46:\n                    case 47:\n                        bg = n - 40;\n                        break;\n                    case 48:\n                        try {\n                            bg = getExtendedColors(numbers);\n                        }\n                        catch (e) {\n                            numbers.length = 0;\n                        }\n                        break;\n                    case 49:\n                        bg = [];\n                        break;\n                    case 90:\n                    case 91:\n                    case 92:\n                    case 93:\n                    case 94:\n                    case 95:\n                    case 96:\n                    case 97:\n                        fg = n - 90 + 8;\n                        break;\n                    case 100:\n                    case 101:\n                    case 102:\n                    case 103:\n                    case 104:\n                    case 105:\n                    case 106:\n                    case 107:\n                        bg = n - 100 + 8;\n                        break;\n                    default:\n                    // Unknown codes are ignored\n                }\n            }\n        }\n        return out.join('');\n    }\n    Private.ansiSpan = ansiSpan;\n})(Private || (Private = {}));\n//# sourceMappingURL=renderers.js.map","import { Widget } from '@lumino/widgets';\nimport * as renderers from './renderers';\n/**\n * A common base class for mime renderers.\n */\nexport class RenderedCommon extends Widget {\n    /**\n     * Construct a new rendered common widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super();\n        this.mimeType = options.mimeType;\n        this.sanitizer = options.sanitizer;\n        this.resolver = options.resolver;\n        this.linkHandler = options.linkHandler;\n        this.latexTypesetter = options.latexTypesetter;\n        this.node.dataset['mimeType'] = this.mimeType;\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     *\n     * #### Notes\n     * If the DOM node for this widget already has content, it is emptied\n     * before rendering. Subclasses that do not want this behavior\n     * (if, for instance, they are using DOM diffing), should override\n     * this method and not call `super.renderModel()`.\n     */\n    async renderModel(model) {\n        // TODO compare model against old model for early bail?\n        // Empty any existing content in the node from previous renders\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        // Toggle the trusted class on the widget.\n        this.toggleClass('jp-mod-trusted', model.trusted);\n        // Render the actual content.\n        await this.render(model);\n        // Handle the fragment identifier if given.\n        const { fragment } = model.metadata;\n        if (fragment) {\n            this.setFragment(fragment);\n        }\n    }\n    /**\n     * Set the URI fragment identifier.\n     *\n     * @param fragment - The URI fragment identifier.\n     */\n    setFragment(fragment) {\n        /* no-op */\n    }\n}\n/**\n * A common base class for HTML mime renderers.\n */\nexport class RenderedHTMLCommon extends RenderedCommon {\n    /**\n     * Construct a new rendered HTML common widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedHTMLCommon');\n    }\n    setFragment(fragment) {\n        let el;\n        try {\n            el = this.node.querySelector(fragment);\n        }\n        catch (error) {\n            console.warn('Unable to set URI fragment identifier.', error);\n        }\n        if (el) {\n            el.scrollIntoView();\n        }\n    }\n}\n/**\n * A mime renderer for displaying HTML and math.\n */\nexport class RenderedHTML extends RenderedHTMLCommon {\n    /**\n     * Construct a new rendered HTML widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedHTML');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderHTML({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A mime renderer for displaying LaTeX output.\n */\nexport class RenderedLatex extends RenderedCommon {\n    /**\n     * Construct a new rendered LaTeX widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedLatex');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderLatex({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A mime renderer for displaying images.\n */\nexport class RenderedImage extends RenderedCommon {\n    /**\n     * Construct a new rendered image widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedImage');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const metadata = model.metadata[this.mimeType];\n        return renderers.renderImage({\n            host: this.node,\n            mimeType: this.mimeType,\n            source: String(model.data[this.mimeType]),\n            width: metadata && metadata.width,\n            height: metadata && metadata.height,\n            needsBackground: model.metadata['needs_background'],\n            unconfined: metadata && metadata.unconfined\n        });\n    }\n}\n/**\n * A mime renderer for displaying Markdown with embedded latex.\n */\nexport class RenderedMarkdown extends RenderedHTMLCommon {\n    /**\n     * Construct a new rendered markdown widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedMarkdown');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderMarkdown({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            shouldTypeset: this.isAttached,\n            latexTypesetter: this.latexTypesetter\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A widget for displaying SVG content.\n */\nexport class RenderedSVG extends RenderedCommon {\n    /**\n     * Construct a new rendered SVG widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedSVG');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        const metadata = model.metadata[this.mimeType];\n        return renderers.renderSVG({\n            host: this.node,\n            source: String(model.data[this.mimeType]),\n            trusted: model.trusted,\n            unconfined: metadata && metadata.unconfined\n        });\n    }\n    /**\n     * A message handler invoked on an `'after-attach'` message.\n     */\n    onAfterAttach(msg) {\n        if (this.latexTypesetter) {\n            this.latexTypesetter.typeset(this.node);\n        }\n    }\n}\n/**\n * A widget for displaying plain text and console text.\n */\nexport class RenderedText extends RenderedCommon {\n    /**\n     * Construct a new rendered text widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedText');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderText({\n            host: this.node,\n            sanitizer: this.sanitizer,\n            source: String(model.data[this.mimeType])\n        });\n    }\n}\n/**\n * A widget for displaying JavaScript output.\n */\nexport class RenderedJavaScript extends RenderedCommon {\n    /**\n     * Construct a new rendered text widget.\n     *\n     * @param options - The options for initializing the widget.\n     */\n    constructor(options) {\n        super(options);\n        this.addClass('jp-RenderedJavaScript');\n    }\n    /**\n     * Render a mime model.\n     *\n     * @param model - The mime model to render.\n     *\n     * @returns A promise which resolves when rendering is complete.\n     */\n    render(model) {\n        return renderers.renderText({\n            host: this.node,\n            sanitizer: this.sanitizer,\n            source: 'JavaScript output is disabled in JupyterLab'\n        });\n    }\n}\n//# sourceMappingURL=widgets.js.map","import * as widgets from './widgets';\n/**\n * A mime renderer factory for raw html.\n */\nexport const htmlRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/html'],\n    defaultRank: 50,\n    createRenderer: options => new widgets.RenderedHTML(options)\n};\n/**\n * A mime renderer factory for images.\n */\nexport const imageRendererFactory = {\n    safe: true,\n    mimeTypes: ['image/bmp', 'image/png', 'image/jpeg', 'image/gif'],\n    defaultRank: 90,\n    createRenderer: options => new widgets.RenderedImage(options)\n};\n/**\n * A mime renderer factory for LaTeX.\n */\nexport const latexRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/latex'],\n    defaultRank: 70,\n    createRenderer: options => new widgets.RenderedLatex(options)\n};\n/**\n * A mime renderer factory for Markdown.\n */\nexport const markdownRendererFactory = {\n    safe: true,\n    mimeTypes: ['text/markdown'],\n    defaultRank: 60,\n    createRenderer: options => new widgets.RenderedMarkdown(options)\n};\n/**\n * A mime renderer factory for svg.\n */\nexport const svgRendererFactory = {\n    safe: false,\n    mimeTypes: ['image/svg+xml'],\n    defaultRank: 80,\n    createRenderer: options => new widgets.RenderedSVG(options)\n};\n/**\n * A mime renderer factory for plain and jupyter console text data.\n */\nexport const textRendererFactory = {\n    safe: true,\n    mimeTypes: [\n        'text/plain',\n        'application/vnd.jupyter.stdout',\n        'application/vnd.jupyter.stderr'\n    ],\n    defaultRank: 120,\n    createRenderer: options => new widgets.RenderedText(options)\n};\n/**\n * A placeholder factory for rendered JavaScript.\n */\nexport const javaScriptRendererFactory = {\n    safe: false,\n    mimeTypes: ['text/javascript', 'application/javascript'],\n    defaultRank: 110,\n    createRenderer: options => new widgets.RenderedJavaScript(options)\n};\n/**\n * The standard factories provided by the rendermime package.\n */\nexport const standardRendererFactories = [\n    htmlRendererFactory,\n    markdownRendererFactory,\n    latexRendererFactory,\n    svgRendererFactory,\n    imageRendererFactory,\n    javaScriptRendererFactory,\n    textRendererFactory\n];\n//# sourceMappingURL=factories.js.map","/**\n * The default mime model implementation.\n */\nexport class MimeModel {\n    /**\n     * Construct a new mime model.\n     */\n    constructor(options = {}) {\n        this.trusted = !!options.trusted;\n        this._data = options.data || {};\n        this._metadata = options.metadata || {};\n        this._callback = options.callback || Private.noOp;\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._data;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return this._metadata;\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        this._data = options.data || this._data;\n        this._metadata = options.metadata || this._metadata;\n        this._callback(options);\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A no-op callback function.\n     */\n    function noOp() {\n        /* no-op */\n    }\n    Private.noOp = noOp;\n})(Private || (Private = {}));\n//# sourceMappingURL=mimemodel.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport * as nbformat from '@jupyterlab/nbformat';\nimport { ObservableJSON } from '@jupyterlab/observables';\n/**\n * The default implementation of a notebook output model.\n */\nexport class OutputModel {\n    /**\n     * Construct a new output model.\n     */\n    constructor(options) {\n        this._changed = new Signal(this);\n        this._raw = {};\n        const { data, metadata, trusted } = Private.getBundleOptions(options);\n        this._data = new ObservableJSON({ values: data });\n        this._rawData = data;\n        this._metadata = new ObservableJSON({ values: metadata });\n        this._rawMetadata = metadata;\n        this.trusted = trusted;\n        // Make a copy of the data.\n        const value = options.value;\n        for (const key in value) {\n            // Ignore data and metadata that were stripped.\n            switch (key) {\n                case 'data':\n                case 'metadata':\n                    break;\n                default:\n                    this._raw[key] = Private.extract(value, key);\n            }\n        }\n        this.type = value.output_type;\n        if (nbformat.isExecuteResult(value)) {\n            this.executionCount = value.execution_count;\n        }\n        else {\n            this.executionCount = null;\n        }\n    }\n    /**\n     * A signal emitted when the output model changes.\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Dispose of the resources used by the output model.\n     */\n    dispose() {\n        this._data.dispose();\n        this._metadata.dispose();\n        Signal.clearData(this);\n    }\n    /**\n     * The data associated with the model.\n     */\n    get data() {\n        return this._rawData;\n    }\n    /**\n     * The metadata associated with the model.\n     */\n    get metadata() {\n        return this._rawMetadata;\n    }\n    /**\n     * Set the data associated with the model.\n     *\n     * #### Notes\n     * Depending on the implementation of the mime model,\n     * this call may or may not have deferred effects,\n     */\n    setData(options) {\n        if (options.data) {\n            this._updateObservable(this._data, options.data);\n            this._rawData = options.data;\n        }\n        if (options.metadata) {\n            this._updateObservable(this._metadata, options.metadata);\n            this._rawMetadata = options.metadata;\n        }\n        this._changed.emit(void 0);\n    }\n    /**\n     * Serialize the model to JSON.\n     */\n    toJSON() {\n        const output = {};\n        for (const key in this._raw) {\n            output[key] = Private.extract(this._raw, key);\n        }\n        switch (this.type) {\n            case 'display_data':\n            case 'execute_result':\n            case 'update_display_data':\n                output['data'] = this.data;\n                output['metadata'] = this.metadata;\n                break;\n            default:\n                break;\n        }\n        // Remove transient data.\n        delete output['transient'];\n        return output;\n    }\n    /**\n     * Update an observable JSON object using a readonly JSON object.\n     */\n    _updateObservable(observable, data) {\n        const oldKeys = observable.keys();\n        const newKeys = Object.keys(data);\n        // Handle removed keys.\n        for (const key of oldKeys) {\n            if (newKeys.indexOf(key) === -1) {\n                observable.delete(key);\n            }\n        }\n        // Handle changed data.\n        for (const key of newKeys) {\n            const oldValue = observable.get(key);\n            const newValue = data[key];\n            if (oldValue !== newValue) {\n                observable.set(key, newValue);\n            }\n        }\n    }\n}\n/**\n * The namespace for OutputModel statics.\n */\n(function (OutputModel) {\n    /**\n     * Get the data for an output.\n     *\n     * @params output - A kernel output message payload.\n     *\n     * @returns - The data for the payload.\n     */\n    function getData(output) {\n        return Private.getData(output);\n    }\n    OutputModel.getData = getData;\n    /**\n     * Get the metadata from an output message.\n     *\n     * @params output - A kernel output message payload.\n     *\n     * @returns - The metadata for the payload.\n     */\n    function getMetadata(output) {\n        return Private.getMetadata(output);\n    }\n    OutputModel.getMetadata = getMetadata;\n})(OutputModel || (OutputModel = {}));\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the data from a notebook output.\n     */\n    function getData(output) {\n        let bundle = {};\n        if (nbformat.isExecuteResult(output) ||\n            nbformat.isDisplayData(output) ||\n            nbformat.isDisplayUpdate(output)) {\n            bundle = output.data;\n        }\n        else if (nbformat.isStream(output)) {\n            if (output.name === 'stderr') {\n                bundle['application/vnd.jupyter.stderr'] = output.text;\n            }\n            else {\n                bundle['application/vnd.jupyter.stdout'] = output.text;\n            }\n        }\n        else if (nbformat.isError(output)) {\n            bundle['application/vnd.jupyter.error'] = output;\n            const traceback = output.traceback.join('\\n');\n            bundle['application/vnd.jupyter.stderr'] =\n                traceback || `${output.ename}: ${output.evalue}`;\n        }\n        return convertBundle(bundle);\n    }\n    Private.getData = getData;\n    /**\n     * Get the metadata from an output message.\n     */\n    function getMetadata(output) {\n        const value = Object.create(null);\n        if (nbformat.isExecuteResult(output) || nbformat.isDisplayData(output)) {\n            for (const key in output.metadata) {\n                value[key] = extract(output.metadata, key);\n            }\n        }\n        return value;\n    }\n    Private.getMetadata = getMetadata;\n    /**\n     * Get the bundle options given output model options.\n     */\n    function getBundleOptions(options) {\n        const data = getData(options.value);\n        const metadata = getMetadata(options.value);\n        const trusted = !!options.trusted;\n        return { data, metadata, trusted };\n    }\n    Private.getBundleOptions = getBundleOptions;\n    /**\n     * Extract a value from a JSONObject.\n     */\n    function extract(value, key) {\n        const item = value[key];\n        if (item === undefined || JSONExt.isPrimitive(item)) {\n            return item;\n        }\n        return JSON.parse(JSON.stringify(item));\n    }\n    Private.extract = extract;\n    /**\n     * Convert a mime bundle to mime data.\n     */\n    function convertBundle(bundle) {\n        const map = Object.create(null);\n        for (const mimeType in bundle) {\n            map[mimeType] = extract(bundle, mimeType);\n        }\n        return map;\n    }\n})(Private || (Private = {}));\n//# sourceMappingURL=outputmodel.js.map","import { PathExt, URLExt } from '@jupyterlab/coreutils';\nimport { defaultSanitizer } from '@jupyterlab/apputils';\nimport { MimeModel } from './mimemodel';\n/**\n * An object which manages mime renderer factories.\n *\n * This object is used to render mime models using registered mime\n * renderers, selecting the preferred mime renderer to render the\n * model into a widget.\n *\n * #### Notes\n * This class is not intended to be subclassed.\n */\nexport class RenderMimeRegistry {\n    /**\n     * Construct a new rendermime.\n     *\n     * @param options - The options for initializing the instance.\n     */\n    constructor(options = {}) {\n        this._id = 0;\n        this._ranks = {};\n        this._types = null;\n        this._factories = {};\n        // Parse the options.\n        this.resolver = options.resolver || null;\n        this.linkHandler = options.linkHandler || null;\n        this.latexTypesetter = options.latexTypesetter || null;\n        this.sanitizer = options.sanitizer || defaultSanitizer;\n        // Add the initial factories.\n        if (options.initialFactories) {\n            for (const factory of options.initialFactories) {\n                this.addFactory(factory);\n            }\n        }\n    }\n    /**\n     * The ordered list of mimeTypes.\n     */\n    get mimeTypes() {\n        return this._types || (this._types = Private.sortedTypes(this._ranks));\n    }\n    /**\n     * Find the preferred mime type for a mime bundle.\n     *\n     * @param bundle - The bundle of mime data.\n     *\n     * @param safe - How to consider safe/unsafe factories. If 'ensure',\n     *   it will only consider safe factories. If 'any', any factory will be\n     *   considered. If 'prefer', unsafe factories will be considered, but\n     *   only after the safe options have been exhausted.\n     *\n     * @returns The preferred mime type from the available factories,\n     *   or `undefined` if the mime type cannot be rendered.\n     */\n    preferredMimeType(bundle, safe = 'ensure') {\n        // Try to find a safe factory first, if preferred.\n        if (safe === 'ensure' || safe === 'prefer') {\n            for (const mt of this.mimeTypes) {\n                if (mt in bundle && this._factories[mt].safe) {\n                    return mt;\n                }\n            }\n        }\n        if (safe !== 'ensure') {\n            // Otherwise, search for the best factory among all factories.\n            for (const mt of this.mimeTypes) {\n                if (mt in bundle) {\n                    return mt;\n                }\n            }\n        }\n        // Otherwise, no matching mime type exists.\n        return undefined;\n    }\n    /**\n     * Create a renderer for a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns A new renderer for the given mime type.\n     *\n     * @throws An error if no factory exists for the mime type.\n     */\n    createRenderer(mimeType) {\n        // Throw an error if no factory exists for the mime type.\n        if (!(mimeType in this._factories)) {\n            throw new Error(`No factory for mime type: '${mimeType}'`);\n        }\n        // Invoke the best factory for the given mime type.\n        return this._factories[mimeType].createRenderer({\n            mimeType,\n            resolver: this.resolver,\n            sanitizer: this.sanitizer,\n            linkHandler: this.linkHandler,\n            latexTypesetter: this.latexTypesetter\n        });\n    }\n    /**\n     * Create a new mime model.  This is a convenience method.\n     *\n     * @options - The options used to create the model.\n     *\n     * @returns A new mime model.\n     */\n    createModel(options = {}) {\n        return new MimeModel(options);\n    }\n    /**\n     * Create a clone of this rendermime instance.\n     *\n     * @param options - The options for configuring the clone.\n     *\n     * @returns A new independent clone of the rendermime.\n     */\n    clone(options = {}) {\n        // Create the clone.\n        const clone = new RenderMimeRegistry({\n            resolver: options.resolver || this.resolver || undefined,\n            sanitizer: options.sanitizer || this.sanitizer || undefined,\n            linkHandler: options.linkHandler || this.linkHandler || undefined,\n            latexTypesetter: options.latexTypesetter || this.latexTypesetter || undefined\n        });\n        // Clone the internal state.\n        clone._factories = Object.assign({}, this._factories);\n        clone._ranks = Object.assign({}, this._ranks);\n        clone._id = this._id;\n        // Return the cloned object.\n        return clone;\n    }\n    /**\n     * Get the renderer factory registered for a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns The factory for the mime type, or `undefined`.\n     */\n    getFactory(mimeType) {\n        return this._factories[mimeType];\n    }\n    /**\n     * Add a renderer factory to the rendermime.\n     *\n     * @param factory - The renderer factory of interest.\n     *\n     * @param rank - The rank of the renderer. A lower rank indicates\n     *   a higher priority for rendering. If not given, the rank will\n     *   defer to the `defaultRank` of the factory.  If no `defaultRank`\n     *   is given, it will default to 100.\n     *\n     * #### Notes\n     * The renderer will replace an existing renderer for the given\n     * mimeType.\n     */\n    addFactory(factory, rank) {\n        if (rank === undefined) {\n            rank = factory.defaultRank;\n            if (rank === undefined) {\n                rank = 100;\n            }\n        }\n        for (const mt of factory.mimeTypes) {\n            this._factories[mt] = factory;\n            this._ranks[mt] = { rank, id: this._id++ };\n        }\n        this._types = null;\n    }\n    /**\n     * Remove a mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     */\n    removeMimeType(mimeType) {\n        delete this._factories[mimeType];\n        delete this._ranks[mimeType];\n        this._types = null;\n    }\n    /**\n     * Get the rank for a given mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @returns The rank of the mime type or undefined.\n     */\n    getRank(mimeType) {\n        const rank = this._ranks[mimeType];\n        return rank && rank.rank;\n    }\n    /**\n     * Set the rank of a given mime type.\n     *\n     * @param mimeType - The mime type of interest.\n     *\n     * @param rank - The new rank to assign.\n     *\n     * #### Notes\n     * This is a no-op if the mime type is not registered.\n     */\n    setRank(mimeType, rank) {\n        if (!this._ranks[mimeType]) {\n            return;\n        }\n        const id = this._id++;\n        this._ranks[mimeType] = { rank, id };\n        this._types = null;\n    }\n}\n/**\n * The namespace for `RenderMimeRegistry` class statics.\n */\n(function (RenderMimeRegistry) {\n    /**\n     * A default resolver that uses a given reference path and a contents manager.\n     */\n    class UrlResolver {\n        /**\n         * Create a new url resolver.\n         */\n        constructor(options) {\n            if (options.path) {\n                this._path = options.path;\n            }\n            else if (options.session) {\n                this._session = options.session;\n            }\n            else {\n                throw new Error(\"Either 'path' or 'session' must be given as a constructor option\");\n            }\n            this._contents = options.contents;\n        }\n        /**\n         * The path of the object, from which local urls can be derived.\n         */\n        get path() {\n            var _a;\n            return _a = this._path, (_a !== null && _a !== void 0 ? _a : this._session.path);\n        }\n        set path(value) {\n            this._path = value;\n        }\n        /**\n         * Resolve a relative url to an absolute url path.\n         */\n        async resolveUrl(url) {\n            if (this.isLocal(url)) {\n                const cwd = encodeURI(PathExt.dirname(this.path));\n                url = PathExt.resolve(cwd, url);\n            }\n            return url;\n        }\n        /**\n         * Get the download url of a given absolute url path.\n         *\n         * #### Notes\n         * This URL may include a query parameter.\n         */\n        async getDownloadUrl(url) {\n            if (this.isLocal(url)) {\n                // decode url->path before passing to contents api\n                return this._contents.getDownloadUrl(decodeURI(url));\n            }\n            return url;\n        }\n        /**\n         * Whether the URL should be handled by the resolver\n         * or not.\n         *\n         * #### Notes\n         * This is similar to the `isLocal` check in `URLExt`,\n         * but it also checks whether the path points to any\n         * of the `IDrive`s that may be registered with the contents\n         * manager.\n         */\n        isLocal(url) {\n            const path = decodeURI(url);\n            return URLExt.isLocal(url) || !!this._contents.driveName(path);\n        }\n    }\n    RenderMimeRegistry.UrlResolver = UrlResolver;\n})(RenderMimeRegistry || (RenderMimeRegistry = {}));\n/**\n * The namespace for the module implementation details.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Get the mime types in the map, ordered by rank.\n     */\n    function sortedTypes(map) {\n        return Object.keys(map).sort((a, b) => {\n            const p1 = map[a];\n            const p2 = map[b];\n            if (p1.rank !== p2.rank) {\n                return p1.rank - p2.rank;\n            }\n            return p1.id - p2.id;\n        });\n    }\n    Private.sortedTypes = sortedTypes;\n    function sessionConnection(s) {\n        return s.sessionChanged\n            ? s.session\n            : s;\n    }\n    Private.sessionConnection = sessionConnection;\n})(Private || (Private = {}));\n//# sourceMappingURL=registry.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { Token } from '@lumino/coreutils';\n/* tslint:disable */\n/**\n * The rendermime token.\n */\nexport const IRenderMimeRegistry = new Token('@jupyterlab/rendermime:IRenderMimeRegistry');\n/* tslint:enable */\n/* tslint:disable */\n/**\n * The latex typesetter token.\n */\nexport const ILatexTypesetter = new Token('@jupyterlab/rendermime:ILatexTypesetter');\n/* tslint:enable */\n//# sourceMappingURL=tokens.js.map","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match HTML entities and HTML characters. */\nvar reUnescapedHtml = /[&<>\"'`]/g,\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/** Used to map characters to HTML entities. */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '`': '&#96;'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nvar escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n * their corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * Backticks are escaped because in IE < 9, they can break out of\n * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n * [#133](https://html5sec.org/#133) of the\n * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */\nfunction escape(string) {\n  string = toString(string);\n  return (string && reHasUnescapedHtml.test(string))\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\n    : string;\n}\n\nmodule.exports = escape;\n"],"names":["Private","AttachmentModel","constructor","options","this","trusted","_changed","Signal","_raw","data","getData","value","_data","ObservableJSON","values","_rawData","key","extract","changed","dispose","metadata","setData","_updateObservable","emit","toJSON","attachment","observable","oldKeys","keys","newKeys","Object","indexOf","delete","oldValue","get","newValue","set","bundle","map","create","mimeType","convertBundle","item","undefined","JSONExt","getBundleOptions","MATHSPLIT","removeMath","text","math","deTilde","start","end","last","braces","test","replace","wholematch","character","blocks","split","i","m","length","block","charAt","push","processMath","match","slice","substr","join","replaceMath","n","group","substring","j","preProcess","navigator","appName","renderHTML","promise","host","source","sanitizer","resolver","linkHandler","shouldTypeset","latexTypesetter","originalSource","textContent","Promise","resolve","sanitize","innerHTML","getElementsByTagName","evalInnerHTMLScriptTags","container","document","createElement","warning","runButton","onclick","event","firstChild","removeChild","appendChild","insertBefore","handleDefaults","handleUrls","then","typeset","renderImage","width","height","needsBackground","unconfined","img","src","classList","add","renderLatex","async","renderMarkdown","others","s","e","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","propertyIsEnumerable","__rest","parts","html","renderMarked","assign","headerAnchors","renderSVG","search","Image","encodeURIComponent","renderText","content","ansiSpan","allowedTags","pre","controlCodes","webLinkRegex","RegExp","url","lastChars","endsWithGtLt","toAppend","len","autolink","handleAttr","node","name","getAttribute","isLocal","URLExt","setAttribute","resolveUrl","urlPath","getDownloadUrl","protocol","Date","getTime","catch","err","handleAnchor","anchor","href","hash","target","path","decodeURI","handleLink","scripts","toArray","script","parentNode","clone","attrs","attributes","replaceChild","markedInitialized","gfm","langPrefix","CodeMirrorEditor","highlight","code","lang","callback","cb","Mode","spec","el","console","error","mime","reject","anchors","HTMLAnchorElement","rel","imgs","alt","promises","nodes","querySelectorAll","links","all","_a","headerNames","headerType","headers","header","id","ANSI_COLORS","pushColoredChunk","chunk","fg","bg","bold","underline","inverse","out","classes","styles","getExtendedColors","numbers","r","g","b","shift","some","c","RangeError","idx","Math","floor","str","ansiRe","exec","items","parseInt","index","lastIndex","RenderedCommon","Widget","super","dataset","model","toggleClass","render","fragment","setFragment","RenderedHTMLCommon","addClass","querySelector","warn","scrollIntoView","RenderedHTML","String","isAttached","onAfterAttach","msg","RenderedLatex","RenderedImage","RenderedMarkdown","RenderedSVG","RenderedText","RenderedJavaScript","htmlRendererFactory","safe","mimeTypes","defaultRank","createRenderer","imageRendererFactory","latexRendererFactory","markdownRendererFactory","svgRendererFactory","textRendererFactory","javaScriptRendererFactory","standardRendererFactories","MimeModel","_metadata","_callback","noOp","OutputModel","_rawMetadata","type","output_type","executionCount","execution_count","output","getMetadata","traceback","ename","evalue","JSON","parse","stringify","RenderMimeRegistry","_id","_ranks","_types","_factories","defaultSanitizer","initialFactories","factory","addFactory","sortedTypes","preferredMimeType","mt","Error","createModel","getFactory","rank","removeMimeType","getRank","setRank","UrlResolver","_path","session","_session","_contents","contents","cwd","encodeURI","PathExt","driveName","sort","a","p1","p2","sessionConnection","sessionChanged","IRenderMimeRegistry","Token","ILatexTypesetter","Renderer","defaults","inline","findClosingBracket","escape","module","exports","InlineLexer","rules","normal","renderer","pedantic","breaks","static","link","title","cap","prevCapZero","tag","inLink","inRawBlock","lastParenIndex","linkLen","trim","outputLink","escapes","reflink","nolink","toLowerCase","strong","em","codespan","br","del","mangle","smartypants","charCodeAt","_backpedal","_escapes","image","l","ch","random","toString","rtrim","splitCells","Lexer","tokens","lex","token","top","next","loose","bull","listStart","listItems","space","isordered","istask","ischecked","newline","lastToken","trimRight","codeBlockStyle","fences","heading","depth","nptable","align","cells","hr","blockquote","list","ordered","bullet","smartLists","task","checked","def","table","lheading","paragraph","Slugger","TextRenderer","merge","unescape","Parser","slugger","inlineText","reverse","tok","pop","peek","parseText","body","escaped","row","cell","tablecell","tablerow","nextToken","checkbox","listitem","errMsg","silent","log","cleanUrl","infostring","quote","level","raw","headerIds","headerPrefix","slug","xhtml","flags","baseUrl","seen","originalSlug","getDefaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","unescapeTest","_","fromCharCode","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","domain","base","relativeBase","invert","suffLen","currChar","encode","edit","regex","opt","obj","val","getRegex","prot","decodeURIComponent","noopTest","arguments","tableRow","count","offset","curr","splice","checkSanitizeDeprecation","marked","pending","done","message","setOptions","parser","lexer","inlineLexer","_paragraph","_label","_title","_tag","_comment","_punctuation","_scheme","_email","_attribute","_href","_extended_email","object","reUnescapedHtml","reHasUnescapedHtml","freeGlobal","freeSelf","self","root","Function","escapeHtmlChar","objectToString","Symbol","symbolProto","symbolToString","string","isObjectLike","isSymbol","result","baseToString"],"sourceRoot":""}