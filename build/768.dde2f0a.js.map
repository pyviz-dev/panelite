{"version":3,"file":"768.dde2f0a.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/style/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/components/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/style/variables.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/style/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/components/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/style/layout.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/components/group.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/style/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/components/hover.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/style/lineForm.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/defaults/lineCol.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/defaults/kernelStatus.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/defaults/runningSessions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/defaults/memoryUsage.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@pyviz/jupyterlab_pyviz/node_modules/@jupyterlab/statusbar/lib/tokens.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const progressBarItem = style({\n    background: 'black',\n    height: '10px',\n    width: '100px',\n    border: '1px solid black',\n    borderRadius: '3px',\n    marginLeft: '4px',\n    overflow: 'hidden'\n});\nexport const fillerItem = style({\n    background: 'var(--jp-brand-color2)',\n    height: '10px'\n});\n//# sourceMappingURL=progressBar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\nimport { progressBarItem, fillerItem } from '../style/progressBar';\n/**\n * A functional tsx component for a progress bar.\n */\nexport function ProgressBar(props) {\n    return (React.createElement(\"div\", { className: progressBarItem },\n        React.createElement(Filler, { percentage: props.percentage })));\n}\n/**\n * A functional tsx component for a partially filled div.\n */\nfunction Filler(props) {\n    return (React.createElement(\"div\", { className: fillerItem, style: {\n            width: `${props.percentage}px`\n        } }));\n}\n//# sourceMappingURL=progressBar.js.map","export default {\n    hoverColor: 'var(--jp-layout-color3)',\n    clickColor: 'var(--jp-brand-color1)',\n    backgroundColor: 'var(--jp-layout-color2)',\n    height: '24px',\n    fontSize: 'var(--jp-ui-font-size1)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    textColor: 'var(--jp-ui-font-color1)',\n    textClickColor: 'white',\n    itemMargin: '2px',\n    itemPadding: '6px',\n    statusBarPadding: '10px',\n    interItemHalfSpacing: '2px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n};\n//# sourceMappingURL=variables.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport vars from './variables';\nimport { style } from 'typestyle/lib';\nexport const baseText = {\n    fontSize: vars.fontSize,\n    fontFamily: vars.fontFamily\n};\nexport const textItem = style(baseText, {\n    lineHeight: '24px',\n    color: vars.textColor\n});\nexport const nbresuse = style(baseText, {\n    backgroundColor: '#FFD2D2',\n    color: '#D8000C'\n});\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { classes } from 'typestyle/lib';\nimport { textItem } from '../style/text';\n/**\n * A functional tsx component for a text item.\n */\nexport function TextItem(props) {\n    const { title, source, className } = props, rest = __rest(props, [\"title\", \"source\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: classes(textItem, className), title: title }, rest), source));\n}\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nexport const centeredFlex = {\n    display: 'flex',\n    alignItems: 'center'\n};\nexport const leftToRight = {\n    flexDirection: 'row'\n};\nexport const rightToLeft = {\n    flexDirection: 'row-reverse'\n};\nexport const equiDistant = {\n    justifyContent: 'space-between'\n};\n//# sourceMappingURL=layout.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { style, classes } from 'typestyle/lib';\nimport { centeredFlex, leftToRight } from '../style/layout';\nconst groupItemLayout = style(centeredFlex, leftToRight);\n/**\n * A tsx component for a set of items logically grouped together.\n */\nexport function GroupItem(props) {\n    const { spacing, children, className } = props, rest = __rest(props, [\"spacing\", \"children\", \"className\"]);\n    const numChildren = React.Children.count(children);\n    return (React.createElement(\"div\", Object.assign({ className: classes(groupItemLayout, className) }, rest), React.Children.map(children, (child, i) => {\n        if (i === 0) {\n            return React.createElement(\"div\", { style: { marginRight: `${spacing}px` } }, child);\n        }\n        else if (i === numChildren - 1) {\n            return React.createElement(\"div\", { style: { marginLeft: `${spacing}px` } }, child);\n        }\n        else {\n            return React.createElement(\"div\", { style: { margin: `0px ${spacing}px` } }, child);\n        }\n    })));\n}\n//# sourceMappingURL=group.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { textItem } from './text';\nimport { style } from 'typestyle/lib';\nimport vars from './variables';\nimport { rightToLeft, leftToRight, centeredFlex } from './layout';\nconst itemPadding = {\n    paddingLeft: vars.itemPadding,\n    paddingRight: vars.itemPadding\n};\nconst interactiveHover = {\n    $nest: {\n        '&:hover': {\n            backgroundColor: vars.hoverColor\n        }\n    }\n};\nconst clicked = {\n    backgroundColor: vars.clickColor,\n    $nest: {\n        ['.' + textItem]: {\n            color: vars.textClickColor\n        }\n    }\n};\nexport const statusBar = style({\n    background: vars.backgroundColor,\n    minHeight: vars.height,\n    justifyContent: 'space-between',\n    paddingLeft: vars.statusBarPadding,\n    paddingRight: vars.statusBarPadding\n}, centeredFlex);\nexport const side = style(centeredFlex);\nexport const leftSide = style(leftToRight);\nexport const rightSide = style(rightToLeft);\nexport const item = style({\n    maxHeight: vars.height,\n    marginLeft: vars.itemMargin,\n    marginRight: vars.itemMargin,\n    height: vars.height,\n    whiteSpace: vars.whiteSpace,\n    textOverflow: vars.textOverflow,\n    color: vars.textColor\n}, itemPadding);\nexport const clickedItem = style(clicked);\nexport const interactiveItem = style(interactiveHover);\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { HoverBox } from '@jupyterlab/apputils';\nimport { Widget, PanelLayout } from '@lumino/widgets';\nimport { style } from 'typestyle/lib';\nimport { clickedItem, interactiveItem } from '../style/statusbar';\nconst hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\n/**\n * Create and show a popup component.\n *\n * @param options - options for the popup\n *\n * @returns the popup that was created.\n */\nexport function showPopup(options) {\n    const dialog = new Popup(options);\n    dialog.launch();\n    return dialog;\n}\n/**\n * A class for a Popup widget.\n */\nexport class Popup extends Widget {\n    /**\n     * Construct a new Popup.\n     */\n    constructor(options) {\n        super();\n        this._body = options.body;\n        this._body.addClass(hoverItem);\n        this._anchor = options.anchor;\n        this._align = options.align;\n        const layout = (this.layout = new PanelLayout());\n        layout.addWidget(options.body);\n        this._body.node.addEventListener('resize', () => {\n            this.update();\n        });\n    }\n    /**\n     * Attach the popup widget to the page.\n     */\n    launch() {\n        this._setGeometry();\n        Widget.attach(this, document.body);\n        this.update();\n        this._anchor.addClass(clickedItem);\n        this._anchor.removeClass(interactiveItem);\n    }\n    /**\n     * Handle `'update'` messages for the widget.\n     */\n    onUpdateRequest(msg) {\n        this._setGeometry();\n        super.onUpdateRequest(msg);\n    }\n    /**\n     * Handle `'after-attach'` messages for the widget.\n     */\n    onAfterAttach(msg) {\n        document.addEventListener('click', this, false);\n        this.node.addEventListener('keydown', this, false);\n        window.addEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'after-detach'` messages for the widget.\n     */\n    onAfterDetach(msg) {\n        document.removeEventListener('click', this, false);\n        this.node.removeEventListener('keydown', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'resize'` messages for the widget.\n     */\n    onResize() {\n        this.update();\n    }\n    /**\n     * Dispose of the widget.\n     */\n    dispose() {\n        super.dispose();\n        this._anchor.removeClass(clickedItem);\n        this._anchor.addClass(interactiveItem);\n    }\n    /**\n     * Handle DOM events for the widget.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'keydown':\n                this._evtKeydown(event);\n                break;\n            case 'click':\n                this._evtClick(event);\n                break;\n            case 'resize':\n                this.onResize();\n                break;\n            default:\n                break;\n        }\n    }\n    _evtClick(event) {\n        if (!!event.target &&\n            !(this._body.node.contains(event.target) ||\n                this._anchor.node.contains(event.target))) {\n            this.dispose();\n        }\n    }\n    _evtKeydown(event) {\n        // Check for escape key\n        switch (event.keyCode) {\n            case 27: // Escape.\n                event.stopPropagation();\n                event.preventDefault();\n                this.dispose();\n                break;\n            default:\n                break;\n        }\n    }\n    _setGeometry() {\n        let aligned = 0;\n        const anchorRect = this._anchor.node.getBoundingClientRect();\n        const bodyRect = this._body.node.getBoundingClientRect();\n        if (this._align === 'right') {\n            aligned = -(bodyRect.width - anchorRect.width);\n        }\n        const style = window.getComputedStyle(this._body.node);\n        HoverBox.setGeometry({\n            anchor: anchorRect,\n            host: document.body,\n            maxHeight: 500,\n            minHeight: 20,\n            node: this._body.node,\n            offset: {\n                horizontal: aligned\n            },\n            privilege: 'forceAbove',\n            style\n        });\n    }\n}\n//# sourceMappingURL=hover.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\nexport const lineFormSearch = style({\n    padding: '4px 12px',\n    backgroundColor: 'var(--jp-layout-color2)',\n    boxShadow: 'var(--jp-toolbar-box-shadow)',\n    zIndex: 2,\n    fontSize: 'var(--jp-ui-font-size1)'\n});\nexport const lineFormCaption = style({\n    fontSize: 'var(--jp-ui-font-size0)',\n    lineHeight: 'var(--jp-ui-font-size1)',\n    marginTop: '4px',\n    color: 'var(--jp-ui-font-color0)'\n});\nexport const baseLineForm = {\n    border: 'none',\n    borderRadius: '0px',\n    position: 'absolute',\n    backgroundSize: '16px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    outline: 'none',\n    top: '0px',\n    right: '0px'\n};\nexport const lineFormButtonDiv = style(baseLineForm, {\n    top: '4px',\n    right: '8px',\n    height: '24px',\n    padding: '0px 12px',\n    width: '12px'\n});\nexport const lineFormButtonIcon = style(baseLineForm, {\n    backgroundColor: 'var(--jp-brand-color1)',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '4px 6px'\n});\nexport const lineFormButton = style(baseLineForm, {\n    backgroundColor: 'transparent',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box'\n});\nexport const lineFormWrapper = style({\n    overflow: 'hidden',\n    padding: '0px 8px',\n    border: '1px solid var(--jp-border-color0)',\n    backgroundColor: 'var(--jp-input-active-background)',\n    height: '22px'\n});\nexport const lineFormWrapperFocusWithin = style({\n    border: 'var(--jp-border-width) solid var(--md-blue-500)',\n    boxShadow: 'inset 0 0 4px var(--md-blue-300)'\n});\nexport const lineFormInput = style({\n    background: 'transparent',\n    width: '200px',\n    height: '100%',\n    border: 'none',\n    outline: 'none',\n    color: 'var(--jp-ui-font-color0)',\n    lineHeight: '28px'\n});\n//# sourceMappingURL=lineForm.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomRenderer, VDomModel, ReactWidget } from '@jupyterlab/apputils';\nimport { lineFormIcon } from '@jupyterlab/ui-components';\nimport { classes } from 'typestyle/lib';\nimport { interactiveItem, showPopup, TextItem } from '..';\nimport { lineFormWrapper, lineFormInput, lineFormSearch, lineFormWrapperFocusWithin, lineFormCaption, lineFormButtonDiv, lineFormButtonIcon, lineFormButton } from '../style/lineForm';\n/**\n * A component for rendering a \"go-to-line\" form.\n */\nclass LineFormComponent extends React.Component {\n    /**\n     * Construct a new LineFormComponent.\n     */\n    constructor(props) {\n        super(props);\n        /**\n         * Handle a change to the value in the input field.\n         */\n        this._handleChange = (event) => {\n            this.setState({ value: event.currentTarget.value });\n        };\n        /**\n         * Handle submission of the input field.\n         */\n        this._handleSubmit = (event) => {\n            event.preventDefault();\n            const value = parseInt(this._textInput.value, 10);\n            if (!isNaN(value) &&\n                isFinite(value) &&\n                1 <= value &&\n                value <= this.props.maxLine) {\n                this.props.handleSubmit(value);\n            }\n            return false;\n        };\n        /**\n         * Handle focusing of the input field.\n         */\n        this._handleFocus = () => {\n            this.setState({ hasFocus: true });\n        };\n        /**\n         * Handle blurring of the input field.\n         */\n        this._handleBlur = () => {\n            this.setState({ hasFocus: false });\n        };\n        this._textInput = null;\n        this.state = {\n            value: '',\n            hasFocus: false\n        };\n    }\n    /**\n     * Focus the element on mount.\n     */\n    componentDidMount() {\n        this._textInput.focus();\n    }\n    /**\n     * Render the LineFormComponent.\n     */\n    render() {\n        return (React.createElement(\"div\", { className: lineFormSearch },\n            React.createElement(\"form\", { name: \"lineColumnForm\", onSubmit: this._handleSubmit, noValidate: true },\n                React.createElement(\"div\", { className: classes(lineFormWrapper, 'lm-lineForm-wrapper', this.state.hasFocus ? lineFormWrapperFocusWithin : undefined) },\n                    React.createElement(\"input\", { type: \"text\", className: lineFormInput, onChange: this._handleChange, onFocus: this._handleFocus, onBlur: this._handleBlur, value: this.state.value, ref: input => {\n                            this._textInput = input;\n                        } }),\n                    React.createElement(\"div\", { className: lineFormButtonDiv },\n                        React.createElement(lineFormIcon.react, { className: lineFormButtonIcon, elementPosition: \"center\" }),\n                        React.createElement(\"input\", { type: \"submit\", className: lineFormButton, value: \"\" }))),\n                React.createElement(\"label\", { className: lineFormCaption },\n                    \"Go to line number between 1 and \",\n                    this.props.maxLine))));\n    }\n}\n/**\n * A pure functional component for rendering a line/column\n * status item.\n */\nfunction LineColComponent(props) {\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: `Ln ${props.line}, Col ${props.column}`, title: \"Go to line number\\u2026\" }));\n}\n/**\n * A widget implementing a line/column status item.\n */\nexport class LineCol extends VDomRenderer {\n    /**\n     * Construct a new LineCol status item.\n     */\n    constructor() {\n        super(new LineCol.Model());\n        this._popup = null;\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(LineColComponent, { line: this.model.line, column: this.model.column, handleClick: () => this._handleClick() }));\n        }\n    }\n    /**\n     * A click handler for the widget.\n     */\n    _handleClick() {\n        if (this._popup) {\n            this._popup.dispose();\n        }\n        const body = ReactWidget.create(React.createElement(LineFormComponent, { handleSubmit: val => this._handleSubmit(val), currentLine: this.model.line, maxLine: this.model.editor.lineCount }));\n        this._popup = showPopup({\n            body: body,\n            anchor: this,\n            align: 'right'\n        });\n    }\n    /**\n     * Handle submission for the widget.\n     */\n    _handleSubmit(value) {\n        this.model.editor.setCursorPosition({ line: value - 1, column: 0 });\n        this._popup.dispose();\n        this.model.editor.focus();\n    }\n}\n/**\n * A namespace for LineCol statics.\n */\n(function (LineCol) {\n    /**\n     * A VDom model for a status item tracking the line/column of an editor.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            /**\n             * React to a change in the cursors of the current editor.\n             */\n            this._onSelectionChanged = () => {\n                const oldState = this._getAllState();\n                const pos = this.editor.getCursorPosition();\n                this._line = pos.line + 1;\n                this._column = pos.column + 1;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._line = 1;\n            this._column = 1;\n            this._editor = null;\n        }\n        /**\n         * The current editor of the model.\n         */\n        get editor() {\n            return this._editor;\n        }\n        set editor(editor) {\n            const oldEditor = this._editor;\n            if (oldEditor) {\n                oldEditor.model.selections.changed.disconnect(this._onSelectionChanged);\n            }\n            const oldState = this._getAllState();\n            this._editor = editor;\n            if (!this._editor) {\n                this._column = 1;\n                this._line = 1;\n            }\n            else {\n                this._editor.model.selections.changed.connect(this._onSelectionChanged);\n                const pos = this._editor.getCursorPosition();\n                this._column = pos.column + 1;\n                this._line = pos.line + 1;\n            }\n            this._triggerChange(oldState, this._getAllState());\n        }\n        /**\n         * The current line of the model.\n         */\n        get line() {\n            return this._line;\n        }\n        /**\n         * The current column of the model.\n         */\n        get column() {\n            return this._column;\n        }\n        _getAllState() {\n            return [this._line, this._column];\n        }\n        _triggerChange(oldState, newState) {\n            if (oldState[0] !== newState[0] || oldState[1] !== newState[1]) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    LineCol.Model = Model;\n})(LineCol || (LineCol = {}));\n//# sourceMappingURL=lineCol.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomRenderer, VDomModel } from '@jupyterlab/apputils';\nimport { Text } from '@jupyterlab/coreutils';\nimport { interactiveItem, TextItem } from '..';\nimport { JSONExt } from '@lumino/coreutils';\n/**\n * A pure functional component for rendering kernel status.\n */\nfunction KernelStatusComponent(props) {\n    let statusText = '';\n    if (props.status) {\n        statusText = ` | ${Text.titleCase(props.status)}`;\n    }\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: `${props.kernelName}${statusText}`, title: `Change kernel for ${props.activityName}` }));\n}\n/**\n * A VDomRenderer widget for displaying the status of a kernel.\n */\nexport class KernelStatus extends VDomRenderer {\n    /**\n     * Construct the kernel status widget.\n     */\n    constructor(opts) {\n        super(new KernelStatus.Model());\n        this._handleClick = opts.onClick;\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the kernel status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(KernelStatusComponent, { status: this.model.status, kernelName: this.model.kernelName, activityName: this.model.activityName, handleClick: this._handleClick }));\n        }\n    }\n}\n/**\n * A namespace for KernelStatus statics.\n */\n(function (KernelStatus) {\n    /**\n     * A VDomModel for the kernel status indicator.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            /**\n             * React to changes to the kernel status.\n             */\n            this._onKernelStatusChanged = () => {\n                var _a;\n                this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n                this.stateChanged.emit(void 0);\n            };\n            /**\n             * React to changes in the kernel.\n             */\n            this._onKernelChanged = (_sessionContext, change) => {\n                var _a;\n                const oldState = this._getAllState();\n                // sync setting of status and display name\n                this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n                this._kernelName = _sessionContext.kernelDisplayName;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._activityName = 'activity';\n            this._kernelName = 'No Kernel!';\n            this._kernelStatus = '';\n            this._sessionContext = null;\n        }\n        /**\n         * The name of the kernel.\n         */\n        get kernelName() {\n            return this._kernelName;\n        }\n        /**\n         * The current status of the kernel.\n         */\n        get status() {\n            return this._kernelStatus;\n        }\n        /**\n         * A display name for the activity.\n         */\n        get activityName() {\n            return this._activityName;\n        }\n        set activityName(val) {\n            const oldVal = this._activityName;\n            if (oldVal === val) {\n                return;\n            }\n            this._activityName = val;\n            this.stateChanged.emit(void 0);\n        }\n        /**\n         * The current client session associated with the kernel status indicator.\n         */\n        get sessionContext() {\n            return this._sessionContext;\n        }\n        set sessionContext(sessionContext) {\n            var _a, _b, _c, _d, _e, _f, _g, _h;\n            (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.statusChanged.disconnect(this._onKernelStatusChanged);\n            (_b = this._sessionContext) === null || _b === void 0 ? void 0 : _b.kernelChanged.disconnect(this._onKernelChanged);\n            const oldState = this._getAllState();\n            this._sessionContext = sessionContext;\n            this._kernelStatus = (_c = sessionContext) === null || _c === void 0 ? void 0 : _c.kernelDisplayStatus;\n            this._kernelName = (_e = (_d = sessionContext) === null || _d === void 0 ? void 0 : _d.kernelDisplayName, (_e !== null && _e !== void 0 ? _e : 'No Kernel'));\n            (_f = sessionContext) === null || _f === void 0 ? void 0 : _f.statusChanged.connect(this._onKernelStatusChanged, this);\n            (_g = sessionContext) === null || _g === void 0 ? void 0 : _g.connectionStatusChanged.connect(this._onKernelStatusChanged, this);\n            (_h = sessionContext) === null || _h === void 0 ? void 0 : _h.kernelChanged.connect(this._onKernelChanged, this);\n            this._triggerChange(oldState, this._getAllState());\n        }\n        _getAllState() {\n            return [this._kernelName, this._kernelStatus, this._activityName];\n        }\n        _triggerChange(oldState, newState) {\n            if (JSONExt.deepEqual(oldState, newState)) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    KernelStatus.Model = Model;\n})(KernelStatus || (KernelStatus = {}));\n//# sourceMappingURL=kernelStatus.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomRenderer, VDomModel } from '@jupyterlab/apputils';\nimport { kernelIcon, terminalIcon } from '@jupyterlab/ui-components';\nimport { GroupItem, interactiveItem, TextItem } from '..';\n/**\n * Half spacing between subitems in a status item.\n */\nconst HALF_SPACING = 4;\n/**\n * A pure functional component for rendering kernel and terminal sessions.\n *\n * @param props: the props for the component.\n *\n * @returns a tsx component for the running sessions.\n */\nfunction RunningSessionsComponent(props) {\n    return (React.createElement(GroupItem, { spacing: HALF_SPACING, onClick: props.handleClick },\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.terminals }),\n            React.createElement(terminalIcon.react, { left: '1px', top: '3px', stylesheet: 'statusBar' })),\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.sessions }),\n            React.createElement(kernelIcon.react, { top: '2px', stylesheet: 'statusBar' }))));\n}\n/**\n * A VDomRenderer for a RunningSessions status item.\n */\nexport class RunningSessions extends VDomRenderer {\n    /**\n     * Create a new RunningSessions widget.\n     */\n    constructor(opts) {\n        super(new RunningSessions.Model());\n        this._serviceManager = opts.serviceManager;\n        this._handleClick = opts.onClick;\n        this._serviceManager.sessions.runningChanged.connect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.connect(this._onTerminalsRunningChanged, this);\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the running sessions widget.\n     */\n    render() {\n        if (!this.model) {\n            return null;\n        }\n        this.title.caption = `${this.model.terminals} Terminals, ${this.model.sessions} Kernel sessions`;\n        return (React.createElement(RunningSessionsComponent, { sessions: this.model.sessions, terminals: this.model.terminals, handleClick: this._handleClick }));\n    }\n    /**\n     * Dispose of the status item.\n     */\n    dispose() {\n        super.dispose();\n        this._serviceManager.sessions.runningChanged.disconnect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.disconnect(this._onTerminalsRunningChanged, this);\n    }\n    /**\n     * Set the number of kernel sessions when the list changes.\n     */\n    _onSessionsRunningChanged(manager, sessions) {\n        this.model.sessions = sessions.length;\n    }\n    /**\n     * Set the number of terminal sessions when the list changes.\n     */\n    _onTerminalsRunningChanged(manager, terminals) {\n        this.model.terminals = terminals.length;\n    }\n}\n/**\n * A namespace for RunninSessions statics.\n */\n(function (RunningSessions) {\n    /**\n     * A VDomModel for the RunninSessions status item.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            this._terminals = 0;\n            this._sessions = 0;\n        }\n        /**\n         * The number of active kernel sessions.\n         */\n        get sessions() {\n            return this._sessions;\n        }\n        set sessions(sessions) {\n            const oldSessions = this._sessions;\n            this._sessions = sessions;\n            if (oldSessions !== this._sessions) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n        /**\n         * The number of active terminal sessions.\n         */\n        get terminals() {\n            return this._terminals;\n        }\n        set terminals(terminals) {\n            const oldTerminals = this._terminals;\n            this._terminals = terminals;\n            if (oldTerminals !== this._terminals) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    RunningSessions.Model = Model;\n})(RunningSessions || (RunningSessions = {}));\n//# sourceMappingURL=runningSessions.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomModel, VDomRenderer } from '@jupyterlab/apputils';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { Poll } from '@lumino/polling';\nimport { TextItem } from '..';\nimport { nbresuse } from '../style/text';\n/**\n * A VDomRenderer for showing memory usage by a kernel.\n */\nexport class MemoryUsage extends VDomRenderer {\n    /**\n     * Construct a new memory usage status item.\n     */\n    constructor() {\n        super(new MemoryUsage.Model({ refreshRate: 5000 }));\n    }\n    /**\n     * Render the memory usage status item.\n     */\n    render() {\n        if (!this.model) {\n            return null;\n        }\n        let text;\n        if (this.model.memoryLimit === null) {\n            text = `Mem: ${this.model.currentMemory.toFixed(Private.DECIMAL_PLACES)} ${this.model.units}`;\n        }\n        else {\n            text = `Mem: ${this.model.currentMemory.toFixed(Private.DECIMAL_PLACES)} / ${this.model.memoryLimit.toFixed(Private.DECIMAL_PLACES)} ${this.model.units}`;\n        }\n        if (!this.model.usageWarning) {\n            return React.createElement(TextItem, { title: \"Current mem usage\", source: text });\n        }\n        else {\n            return (React.createElement(TextItem, { title: \"Current mem usage\", source: text, className: nbresuse }));\n        }\n    }\n}\n/**\n * A namespace for MemoryUsage statics.\n */\n(function (MemoryUsage) {\n    /**\n     * A VDomModel for the memory usage status item.\n     */\n    class Model extends VDomModel {\n        /**\n         * Construct a new memory usage model.\n         *\n         * @param options: the options for creating the model.\n         */\n        constructor(options) {\n            super();\n            this._currentMemory = 0;\n            this._memoryLimit = null;\n            this._metricsAvailable = false;\n            this._units = 'B';\n            this._warn = false;\n            this._poll = new Poll({\n                factory: () => Private.factory(),\n                frequency: {\n                    interval: options.refreshRate,\n                    backoff: true\n                },\n                name: '@jupyterlab/statusbar:MemoryUsage#metrics'\n            });\n            this._poll.ticked.connect(poll => {\n                const { payload, phase } = poll.state;\n                if (phase === 'resolved') {\n                    this._updateMetricsValues(payload);\n                    return;\n                }\n                if (phase === 'rejected') {\n                    const oldMetricsAvailable = this._metricsAvailable;\n                    this._metricsAvailable = false;\n                    this._currentMemory = 0;\n                    this._memoryLimit = null;\n                    this._units = 'B';\n                    if (oldMetricsAvailable) {\n                        this.stateChanged.emit();\n                    }\n                    return;\n                }\n            });\n        }\n        /**\n         * Whether the metrics server extension is available.\n         */\n        get metricsAvailable() {\n            return this._metricsAvailable;\n        }\n        /**\n         * The current memory usage/\n         */\n        get currentMemory() {\n            return this._currentMemory;\n        }\n        /**\n         * The current memory limit, or null if not specified.\n         */\n        get memoryLimit() {\n            return this._memoryLimit;\n        }\n        /**\n         * The units for memory usages and limits.\n         */\n        get units() {\n            return this._units;\n        }\n        /**\n         * The warning for memory usage.\n         */\n        get usageWarning() {\n            return this._warn;\n        }\n        /**\n         * Dispose of the memory usage model.\n         */\n        dispose() {\n            super.dispose();\n            this._poll.dispose();\n        }\n        /**\n         * Given the results of the metrics request, update model values.\n         */\n        _updateMetricsValues(value) {\n            const oldMetricsAvailable = this._metricsAvailable;\n            const oldCurrentMemory = this._currentMemory;\n            const oldMemoryLimit = this._memoryLimit;\n            const oldUnits = this._units;\n            const oldUsageWarning = this._warn;\n            if (value === null) {\n                this._metricsAvailable = false;\n                this._currentMemory = 0;\n                this._memoryLimit = null;\n                this._units = 'B';\n                this._warn = false;\n            }\n            else {\n                const numBytes = value.rss;\n                const memoryLimit = value.limits.memory\n                    ? value.limits.memory.rss\n                    : null;\n                const [currentMemory, units] = Private.convertToLargestUnit(numBytes);\n                const usageWarning = value.limits.memory\n                    ? value.limits.memory.warn\n                    : false;\n                this._metricsAvailable = true;\n                this._currentMemory = currentMemory;\n                this._units = units;\n                this._memoryLimit = memoryLimit\n                    ? memoryLimit / Private.MEMORY_UNIT_LIMITS[units]\n                    : null;\n                this._warn = usageWarning;\n            }\n            if (this._currentMemory !== oldCurrentMemory ||\n                this._units !== oldUnits ||\n                this._memoryLimit !== oldMemoryLimit ||\n                this._metricsAvailable !== oldMetricsAvailable ||\n                this._warn !== oldUsageWarning) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    MemoryUsage.Model = Model;\n})(MemoryUsage || (MemoryUsage = {}));\n/**\n * A namespace for module private statics.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The number of decimal places to use when rendering memory usage.\n     */\n    Private.DECIMAL_PLACES = 2;\n    /**\n     * The number of bytes in each memory unit.\n     */\n    Private.MEMORY_UNIT_LIMITS = {\n        B: 1,\n        KB: 1024,\n        MB: 1048576,\n        GB: 1073741824,\n        TB: 1099511627776,\n        PB: 1125899906842624\n    };\n    /**\n     * Given a number of bytes, convert to the most human-readable\n     * format, (GB, TB, etc).\n     */\n    function convertToLargestUnit(numBytes) {\n        if (numBytes < Private.MEMORY_UNIT_LIMITS.KB) {\n            return [numBytes, 'B'];\n        }\n        else if (Private.MEMORY_UNIT_LIMITS.KB === numBytes ||\n            numBytes < Private.MEMORY_UNIT_LIMITS.MB) {\n            return [numBytes / Private.MEMORY_UNIT_LIMITS.KB, 'KB'];\n        }\n        else if (Private.MEMORY_UNIT_LIMITS.MB === numBytes ||\n            numBytes < Private.MEMORY_UNIT_LIMITS.GB) {\n            return [numBytes / Private.MEMORY_UNIT_LIMITS.MB, 'MB'];\n        }\n        else if (Private.MEMORY_UNIT_LIMITS.GB === numBytes ||\n            numBytes < Private.MEMORY_UNIT_LIMITS.TB) {\n            return [numBytes / Private.MEMORY_UNIT_LIMITS.GB, 'GB'];\n        }\n        else if (Private.MEMORY_UNIT_LIMITS.TB === numBytes ||\n            numBytes < Private.MEMORY_UNIT_LIMITS.PB) {\n            return [numBytes / Private.MEMORY_UNIT_LIMITS.TB, 'TB'];\n        }\n        else {\n            return [numBytes / Private.MEMORY_UNIT_LIMITS.PB, 'PB'];\n        }\n    }\n    Private.convertToLargestUnit = convertToLargestUnit;\n    /**\n     * Settings for making requests to the server.\n     */\n    const SERVER_CONNECTION_SETTINGS = ServerConnection.makeSettings();\n    /**\n     * The url endpoint for making requests to the server.\n     */\n    const METRIC_URL = URLExt.join(SERVER_CONNECTION_SETTINGS.baseUrl, 'metrics');\n    /**\n     * Make a request to the backend.\n     */\n    async function factory() {\n        const request = ServerConnection.makeRequest(METRIC_URL, {}, SERVER_CONNECTION_SETTINGS);\n        const response = await request;\n        if (response.ok) {\n            return await response.json();\n        }\n        return null;\n    }\n    Private.factory = factory;\n})(Private || (Private = {}));\n//# sourceMappingURL=memoryUsage.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate, DisposableSet } from '@lumino/disposable';\nimport { Widget, Panel, PanelLayout } from '@lumino/widgets';\nimport { statusBar as barStyle, side as sideStyle, item as itemStyle, leftSide as leftSideStyle, rightSide as rightSideStyle } from './style/statusbar';\n/**\n * Main status bar object which contains all items.\n */\nexport class StatusBar extends Widget {\n    constructor() {\n        super();\n        this._leftRankItems = [];\n        this._rightRankItems = [];\n        this._statusItems = {};\n        this._disposables = new DisposableSet();\n        this.addClass(barStyle);\n        const rootLayout = (this.layout = new PanelLayout());\n        const leftPanel = (this._leftSide = new Panel());\n        const middlePanel = (this._middlePanel = new Panel());\n        const rightPanel = (this._rightSide = new Panel());\n        leftPanel.addClass(sideStyle);\n        leftPanel.addClass(leftSideStyle);\n        middlePanel.addClass(sideStyle);\n        rightPanel.addClass(sideStyle);\n        rightPanel.addClass(rightSideStyle);\n        rootLayout.addWidget(leftPanel);\n        rootLayout.addWidget(middlePanel);\n        rootLayout.addWidget(rightPanel);\n    }\n    /**\n     * Register a new status item.\n     *\n     * @param id - a unique id for the status item.\n     *\n     * @param statusItem - The item to add to the status bar.\n     */\n    registerStatusItem(id, statusItem) {\n        if (id in this._statusItems) {\n            throw new Error(`Status item ${id} already registered.`);\n        }\n        // Populate defaults for the optional properties of the status item.\n        const fullStatusItem = Object.assign(Object.assign({}, Private.statusItemDefaults), statusItem);\n        const { align, item, rank } = fullStatusItem;\n        // Connect the activeStateChanged signal to refreshing the status item,\n        // if the signal was provided.\n        const onActiveStateChanged = () => {\n            this._refreshItem(id);\n        };\n        if (fullStatusItem.activeStateChanged) {\n            fullStatusItem.activeStateChanged.connect(onActiveStateChanged);\n        }\n        const rankItem = { id, rank };\n        fullStatusItem.item.addClass(itemStyle);\n        this._statusItems[id] = fullStatusItem;\n        if (align === 'left') {\n            const insertIndex = this._findInsertIndex(this._leftRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._leftSide.addWidget(item);\n                this._leftRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._leftRankItems, insertIndex, rankItem);\n                this._leftSide.insertWidget(insertIndex, item);\n            }\n        }\n        else if (align === 'right') {\n            const insertIndex = this._findInsertIndex(this._rightRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._rightSide.addWidget(item);\n                this._rightRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._rightRankItems, insertIndex, rankItem);\n                this._rightSide.insertWidget(insertIndex, item);\n            }\n        }\n        else {\n            this._middlePanel.addWidget(item);\n        }\n        this._refreshItem(id); // Initially refresh the status item.\n        const disposable = new DisposableDelegate(() => {\n            delete this._statusItems[id];\n            if (fullStatusItem.activeStateChanged) {\n                fullStatusItem.activeStateChanged.disconnect(onActiveStateChanged);\n            }\n            item.parent = null;\n            item.dispose();\n        });\n        this._disposables.add(disposable);\n        return disposable;\n    }\n    /**\n     * Dispose of the status bar.\n     */\n    dispose() {\n        this._leftRankItems.length = 0;\n        this._rightRankItems.length = 0;\n        this._disposables.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle an 'update-request' message to the status bar.\n     */\n    onUpdateRequest(msg) {\n        this._refreshAll();\n        super.onUpdateRequest(msg);\n    }\n    _findInsertIndex(side, newItem) {\n        return ArrayExt.findFirstIndex(side, item => item.rank > newItem.rank);\n    }\n    _refreshItem(id) {\n        const statusItem = this._statusItems[id];\n        if (statusItem.isActive()) {\n            statusItem.item.show();\n            statusItem.item.update();\n        }\n        else {\n            statusItem.item.hide();\n        }\n    }\n    _refreshAll() {\n        Object.keys(this._statusItems).forEach(id => {\n            this._refreshItem(id);\n        });\n    }\n}\n/**\n * A namespace for private functionality.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Default options for a status item, less the item itself.\n     */\n    Private.statusItemDefaults = {\n        align: 'left',\n        rank: 0,\n        isActive: () => true,\n        activeStateChanged: undefined\n    };\n})(Private || (Private = {}));\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n// tslint:disable-next-line:variable-name\nexport const IStatusBar = new Token('@jupyterlab/statusbar:IStatusBar');\n//# sourceMappingURL=tokens.js.map"],"names":["progressBarItem","background","height","width","border","borderRadius","marginLeft","overflow","fillerItem","ProgressBar","props","className","Filler","percentage","style","baseText","fontSize","fontFamily","textItem","lineHeight","color","nbresuse","backgroundColor","TextItem","title","source","rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","assign","centeredFlex","display","alignItems","leftToRight","flexDirection","groupItemLayout","GroupItem","spacing","children","numChildren","child","marginRight","margin","itemPadding","paddingLeft","paddingRight","interactiveHover","$nest","clicked","statusBar","minHeight","justifyContent","side","leftSide","rightSide","maxHeight","whiteSpace","textOverflow","clickedItem","interactiveItem","hoverItem","boxShadow","showPopup","options","dialog","Popup","launch","Widget","constructor","super","this","_body","body","addClass","_anchor","anchor","_align","align","layout","PanelLayout","addWidget","node","addEventListener","update","_setGeometry","document","removeClass","onUpdateRequest","msg","onAfterAttach","window","onAfterDetach","removeEventListener","onResize","dispose","handleEvent","event","type","_evtKeydown","_evtClick","target","contains","keyCode","stopPropagation","preventDefault","aligned","anchorRect","getBoundingClientRect","bodyRect","getComputedStyle","HoverBox","host","offset","horizontal","privilege","lineFormSearch","padding","zIndex","lineFormCaption","marginTop","baseLineForm","position","backgroundSize","backgroundRepeat","backgroundPosition","outline","top","right","lineFormButtonDiv","lineFormButtonIcon","boxSizing","lineFormButton","lineFormWrapper","lineFormWrapperFocusWithin","lineFormInput","LineFormComponent","_handleChange","setState","value","currentTarget","_handleSubmit","parseInt","_textInput","isNaN","isFinite","maxLine","handleSubmit","_handleFocus","hasFocus","_handleBlur","state","componentDidMount","focus","render","name","onSubmit","noValidate","undefined","onChange","onFocus","onBlur","ref","input","lineFormIcon","elementPosition","LineColComponent","onClick","handleClick","line","column","LineCol","VDomRenderer","Model","_popup","model","_handleClick","ReactWidget","val","currentLine","editor","lineCount","setCursorPosition","VDomModel","arguments","_onSelectionChanged","oldState","_getAllState","pos","getCursorPosition","_line","_column","_triggerChange","_editor","oldEditor","selections","changed","disconnect","connect","newState","stateChanged","emit","KernelStatusComponent","statusText","status","Text","kernelName","activityName","KernelStatus","opts","RunningSessionsComponent","terminals","terminalIcon","left","stylesheet","sessions","kernelIcon","_onKernelStatusChanged","_a","_kernelStatus","_sessionContext","kernelDisplayStatus","_onKernelChanged","change","_kernelName","kernelDisplayName","_activityName","sessionContext","_b","_c","_d","_e","_f","_g","_h","statusChanged","kernelChanged","connectionStatusChanged","JSONExt","RunningSessions","_serviceManager","serviceManager","runningChanged","_onSessionsRunningChanged","_onTerminalsRunningChanged","caption","manager","_terminals","_sessions","oldSessions","oldTerminals","Private","MemoryUsage","refreshRate","text","memoryLimit","currentMemory","toFixed","DECIMAL_PLACES","units","usageWarning","_currentMemory","_memoryLimit","_metricsAvailable","_units","_warn","_poll","Poll","factory","frequency","interval","backoff","ticked","poll","payload","phase","oldMetricsAvailable","_updateMetricsValues","metricsAvailable","oldCurrentMemory","oldMemoryLimit","oldUnits","oldUsageWarning","numBytes","rss","limits","memory","convertToLargestUnit","warn","MEMORY_UNIT_LIMITS","B","KB","MB","GB","TB","PB","SERVER_CONNECTION_SETTINGS","ServerConnection","METRIC_URL","URLExt","baseUrl","async","request","response","ok","json","StatusBar","_leftRankItems","_rightRankItems","_statusItems","_disposables","DisposableSet","rootLayout","leftPanel","_leftSide","Panel","middlePanel","_middlePanel","rightPanel","_rightSide","registerStatusItem","id","statusItem","Error","fullStatusItem","statusItemDefaults","item","rank","onActiveStateChanged","_refreshItem","activeStateChanged","rankItem","insertIndex","_findInsertIndex","push","ArrayExt","insertWidget","disposable","DisposableDelegate","parent","add","_refreshAll","newItem","isActive","show","hide","keys","forEach","IStatusBar","Token"],"sourceRoot":""}