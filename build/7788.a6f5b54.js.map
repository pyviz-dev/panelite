{"version":3,"file":"7788.a6f5b54.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/activitymonitor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/interfaces.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/markdowncodeblocks.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/pageconfig.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/path.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/time.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/coreutils/lib/url.js","webpack://_JUPYTERLAB.CORE_OUTPUT//Users/philippjfr/development/jupyterlite/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/url-parse/index.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActivityMonitor = void 0;\nconst signaling_1 = require(\"@lumino/signaling\");\n/**\n * A class that monitors activity on a signal.\n */\nclass ActivityMonitor {\n    /**\n     * Construct a new activity monitor.\n     */\n    constructor(options) {\n        this._timer = -1;\n        this._timeout = -1;\n        this._isDisposed = false;\n        this._activityStopped = new signaling_1.Signal(this);\n        options.signal.connect(this._onSignalFired, this);\n        this._timeout = options.timeout || 1000;\n    }\n    /**\n     * A signal emitted when activity has ceased.\n     */\n    get activityStopped() {\n        return this._activityStopped;\n    }\n    /**\n     * The timeout associated with the monitor, in milliseconds.\n     */\n    get timeout() {\n        return this._timeout;\n    }\n    set timeout(value) {\n        this._timeout = value;\n    }\n    /**\n     * Test whether the monitor has been disposed.\n     *\n     * #### Notes\n     * This is a read-only property.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources used by the activity monitor.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        signaling_1.Signal.clearData(this);\n    }\n    /**\n     * A signal handler for the monitored signal.\n     */\n    _onSignalFired(sender, args) {\n        clearTimeout(this._timer);\n        this._sender = sender;\n        this._args = args;\n        this._timer = setTimeout(() => {\n            this._activityStopped.emit({\n                sender: this._sender,\n                args: this._args\n            });\n        }, this._timeout);\n    }\n}\nexports.ActivityMonitor = ActivityMonitor;\n//# sourceMappingURL=activitymonitor.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module coreutils\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./activitymonitor\"), exports);\n__exportStar(require(\"./interfaces\"), exports);\n__exportStar(require(\"./markdowncodeblocks\"), exports);\n__exportStar(require(\"./pageconfig\"), exports);\n__exportStar(require(\"./path\"), exports);\n__exportStar(require(\"./text\"), exports);\n__exportStar(require(\"./time\"), exports);\n__exportStar(require(\"./url\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=interfaces.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MarkdownCodeBlocks = void 0;\n/**\n * The namespace for code block functions which help\n * in extract code from markdown text\n */\nvar MarkdownCodeBlocks;\n(function (MarkdownCodeBlocks) {\n    MarkdownCodeBlocks.CODE_BLOCK_MARKER = '```';\n    const markdownExtensions = [\n        '.markdown',\n        '.mdown',\n        '.mkdn',\n        '.md',\n        '.mkd',\n        '.mdwn',\n        '.mdtxt',\n        '.mdtext',\n        '.text',\n        '.txt',\n        '.Rmd'\n    ];\n    class MarkdownCodeBlock {\n        constructor(startLine) {\n            this.startLine = startLine;\n            this.code = '';\n            this.endLine = -1;\n        }\n    }\n    MarkdownCodeBlocks.MarkdownCodeBlock = MarkdownCodeBlock;\n    /**\n     * Check whether the given file extension is a markdown extension\n     * @param extension - A file extension\n     *\n     * @returns true/false depending on whether this is a supported markdown extension\n     */\n    function isMarkdown(extension) {\n        return markdownExtensions.indexOf(extension) > -1;\n    }\n    MarkdownCodeBlocks.isMarkdown = isMarkdown;\n    /**\n     * Construct all code snippets from current text\n     * (this could be potentially optimized if we can cache and detect differences)\n     * @param text - A string to parse codeblocks from\n     *\n     * @returns An array of MarkdownCodeBlocks.\n     */\n    function findMarkdownCodeBlocks(text) {\n        if (!text || text === '') {\n            return [];\n        }\n        const lines = text.split('\\n');\n        const codeBlocks = [];\n        let currentBlock = null;\n        for (let lineIndex = 0; lineIndex < lines.length; lineIndex++) {\n            const line = lines[lineIndex];\n            const lineContainsMarker = line.indexOf(MarkdownCodeBlocks.CODE_BLOCK_MARKER) === 0;\n            const constructingBlock = currentBlock != null;\n            // Skip this line if it is not part of any code block and doesn't contain a marker.\n            if (!lineContainsMarker && !constructingBlock) {\n                continue;\n            }\n            // Check if we are already constructing a code block.\n            if (!constructingBlock) {\n                // Start constructing a new code block.\n                currentBlock = new MarkdownCodeBlock(lineIndex);\n                // Check whether this is a single line code block of the form ```a = 10```.\n                const firstIndex = line.indexOf(MarkdownCodeBlocks.CODE_BLOCK_MARKER);\n                const lastIndex = line.lastIndexOf(MarkdownCodeBlocks.CODE_BLOCK_MARKER);\n                const isSingleLine = firstIndex !== lastIndex;\n                if (isSingleLine) {\n                    currentBlock.code = line.substring(firstIndex + MarkdownCodeBlocks.CODE_BLOCK_MARKER.length, lastIndex);\n                    currentBlock.endLine = lineIndex;\n                    codeBlocks.push(currentBlock);\n                    currentBlock = null;\n                }\n            }\n            else if (currentBlock) {\n                if (lineContainsMarker) {\n                    // End of block, finish it up.\n                    currentBlock.endLine = lineIndex - 1;\n                    codeBlocks.push(currentBlock);\n                    currentBlock = null;\n                }\n                else {\n                    // Append the current line.\n                    currentBlock.code += line + '\\n';\n                }\n            }\n        }\n        return codeBlocks;\n    }\n    MarkdownCodeBlocks.findMarkdownCodeBlocks = findMarkdownCodeBlocks;\n})(MarkdownCodeBlocks = exports.MarkdownCodeBlocks || (exports.MarkdownCodeBlocks = {}));\n//# sourceMappingURL=markdowncodeblocks.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PageConfig = void 0;\nconst coreutils_1 = require(\"@lumino/coreutils\");\nconst minimist_1 = __importDefault(require(\"minimist\"));\nconst url_1 = require(\"./url\");\n/**\n * The namespace for `PageConfig` functions.\n */\nvar PageConfig;\n(function (PageConfig) {\n    /**\n     * Get global configuration data for the Jupyter application.\n     *\n     * @param name - The name of the configuration option.\n     *\n     * @returns The config value or an empty string if not found.\n     *\n     * #### Notes\n     * All values are treated as strings.\n     * For browser based applications, it is assumed that the page HTML\n     * includes a script tag with the id `jupyter-config-data` containing the\n     * configuration as valid JSON.  In order to support the classic Notebook,\n     * we fall back on checking for `body` data of the given `name`.\n     *\n     * For node applications, it is assumed that the process was launched\n     * with a `--jupyter-config-data` option pointing to a JSON settings\n     * file.\n     */\n    function getOption(name) {\n        if (configData) {\n            return configData[name] || getBodyData(name);\n        }\n        configData = Object.create(null);\n        let found = false;\n        // Use script tag if available.\n        if (typeof document !== 'undefined' && document) {\n            const el = document.getElementById('jupyter-config-data');\n            if (el) {\n                configData = JSON.parse(el.textContent || '');\n                found = true;\n            }\n        }\n        // Otherwise use CLI if given.\n        if (!found && typeof process !== 'undefined' && process.argv) {\n            try {\n                const cli = minimist_1.default(process.argv.slice(2));\n                const path = require('path');\n                let fullPath = '';\n                if ('jupyter-config-data' in cli) {\n                    fullPath = path.resolve(cli['jupyter-config-data']);\n                }\n                else if ('JUPYTER_CONFIG_DATA' in process.env) {\n                    fullPath = path.resolve(process.env['JUPYTER_CONFIG_DATA']);\n                }\n                if (fullPath) {\n                    // Force Webpack to ignore this require.\n                    // eslint-disable-next-line\n                    configData = eval('require')(fullPath);\n                }\n            }\n            catch (e) {\n                console.error(e);\n            }\n        }\n        if (!coreutils_1.JSONExt.isObject(configData)) {\n            configData = Object.create(null);\n        }\n        else {\n            for (const key in configData) {\n                // PageConfig expects strings\n                if (typeof configData[key] !== 'string') {\n                    configData[key] = JSON.stringify(configData[key]);\n                }\n            }\n        }\n        return configData[name] || getBodyData(name);\n    }\n    PageConfig.getOption = getOption;\n    /**\n     * Set global configuration data for the Jupyter application.\n     *\n     * @param name - The name of the configuration option.\n     * @param value - The value to set the option to.\n     *\n     * @returns The last config value or an empty string if it doesn't exist.\n     */\n    function setOption(name, value) {\n        const last = getOption(name);\n        configData[name] = value;\n        return last;\n    }\n    PageConfig.setOption = setOption;\n    /**\n     * Get the base url for a Jupyter application, or the base url of the page.\n     */\n    function getBaseUrl() {\n        return url_1.URLExt.normalize(getOption('baseUrl') || '/');\n    }\n    PageConfig.getBaseUrl = getBaseUrl;\n    /**\n     * Get the tree url for a JupyterLab application.\n     */\n    function getTreeUrl() {\n        return url_1.URLExt.join(getBaseUrl(), getOption('treeUrl'));\n    }\n    PageConfig.getTreeUrl = getTreeUrl;\n    /**\n     * Get the base url for sharing links (usually baseUrl)\n     */\n    function getShareUrl() {\n        return url_1.URLExt.normalize(getOption('shareUrl') || getBaseUrl());\n    }\n    PageConfig.getShareUrl = getShareUrl;\n    /**\n     * Get the tree url for shareable links.\n     * Usually the same as treeUrl,\n     * but overrideable e.g. when sharing with JupyterHub.\n     */\n    function getTreeShareUrl() {\n        return url_1.URLExt.normalize(url_1.URLExt.join(getShareUrl(), getOption('treeUrl')));\n    }\n    PageConfig.getTreeShareUrl = getTreeShareUrl;\n    /**\n     * Create a new URL given an optional mode and tree path.\n     *\n     * This is used to create URLS when the mode or tree path change as the user\n     * changes mode or the current document in the main area. If fields in\n     * options are omitted, the value in PageConfig will be used.\n     *\n     * @param options - IGetUrlOptions for the new path.\n     */\n    function getUrl(options) {\n        var _a, _b, _c, _d;\n        let path = options.toShare ? getShareUrl() : getBaseUrl();\n        const mode = (_a = options.mode) !== null && _a !== void 0 ? _a : getOption('mode');\n        const workspace = (_b = options.workspace) !== null && _b !== void 0 ? _b : getOption('workspace');\n        const labOrDoc = mode === 'single-document' ? 'doc' : 'lab';\n        path = url_1.URLExt.join(path, labOrDoc);\n        if (workspace !== PageConfig.defaultWorkspace) {\n            path = url_1.URLExt.join(path, 'workspaces', encodeURIComponent((_c = getOption('workspace')) !== null && _c !== void 0 ? _c : PageConfig.defaultWorkspace));\n        }\n        const treePath = (_d = options.treePath) !== null && _d !== void 0 ? _d : getOption('treePath');\n        if (treePath) {\n            path = url_1.URLExt.join(path, 'tree', url_1.URLExt.encodeParts(treePath));\n        }\n        return path;\n    }\n    PageConfig.getUrl = getUrl;\n    PageConfig.defaultWorkspace = 'default';\n    /**\n     * Get the base websocket url for a Jupyter application, or an empty string.\n     */\n    function getWsUrl(baseUrl) {\n        let wsUrl = getOption('wsUrl');\n        if (!wsUrl) {\n            baseUrl = baseUrl ? url_1.URLExt.normalize(baseUrl) : getBaseUrl();\n            if (baseUrl.indexOf('http') !== 0) {\n                return '';\n            }\n            wsUrl = 'ws' + baseUrl.slice(4);\n        }\n        return url_1.URLExt.normalize(wsUrl);\n    }\n    PageConfig.getWsUrl = getWsUrl;\n    /**\n     * Returns the URL converting this notebook to a certain\n     * format with nbconvert.\n     */\n    function getNBConvertURL({ path, format, download }) {\n        const notebookPath = url_1.URLExt.encodeParts(path);\n        const url = url_1.URLExt.join(getBaseUrl(), 'nbconvert', format, notebookPath);\n        if (download) {\n            return url + '?download=true';\n        }\n        return url;\n    }\n    PageConfig.getNBConvertURL = getNBConvertURL;\n    /**\n     * Get the authorization token for a Jupyter application.\n     */\n    function getToken() {\n        return getOption('token') || getBodyData('jupyterApiToken');\n    }\n    PageConfig.getToken = getToken;\n    /**\n     * Get the Notebook version info [major, minor, patch].\n     */\n    function getNotebookVersion() {\n        const notebookVersion = getOption('notebookVersion');\n        if (notebookVersion === '') {\n            return [0, 0, 0];\n        }\n        return JSON.parse(notebookVersion);\n    }\n    PageConfig.getNotebookVersion = getNotebookVersion;\n    /**\n     * Private page config data for the Jupyter application.\n     */\n    let configData = null;\n    /**\n     * Get a url-encoded item from `body.data` and decode it\n     * We should never have any encoded URLs anywhere else in code\n     * until we are building an actual request.\n     */\n    function getBodyData(key) {\n        if (typeof document === 'undefined' || !document.body) {\n            return '';\n        }\n        const val = document.body.dataset[key];\n        if (typeof val === 'undefined') {\n            return '';\n        }\n        return decodeURIComponent(val);\n    }\n    /**\n     * The namespace for page config `Extension` functions.\n     */\n    let Extension;\n    (function (Extension) {\n        /**\n         * Populate an array from page config.\n         *\n         * @param key - The page config key (e.g., `deferredExtensions`).\n         *\n         * #### Notes\n         * This is intended for `deferredExtensions` and `disabledExtensions`.\n         */\n        function populate(key) {\n            try {\n                const raw = getOption(key);\n                if (raw) {\n                    return JSON.parse(raw);\n                }\n            }\n            catch (error) {\n                console.warn(`Unable to parse ${key}.`, error);\n            }\n            return [];\n        }\n        /**\n         * The collection of deferred extensions in page config.\n         */\n        Extension.deferred = populate('deferredExtensions');\n        /**\n         * The collection of disabled extensions in page config.\n         */\n        Extension.disabled = populate('disabledExtensions');\n        /**\n         * Returns whether a plugin is deferred.\n         *\n         * @param id - The plugin ID.\n         */\n        function isDeferred(id) {\n            // Check for either a full plugin id match or an extension\n            // name match.\n            const separatorIndex = id.indexOf(':');\n            let extName = '';\n            if (separatorIndex !== -1) {\n                extName = id.slice(0, separatorIndex);\n            }\n            return Extension.deferred.some(val => val === id || (extName && val === extName));\n        }\n        Extension.isDeferred = isDeferred;\n        /**\n         * Returns whether a plugin is disabled.\n         *\n         * @param id - The plugin ID.\n         */\n        function isDisabled(id) {\n            // Check for either a full plugin id match or an extension\n            // name match.\n            const separatorIndex = id.indexOf(':');\n            let extName = '';\n            if (separatorIndex !== -1) {\n                extName = id.slice(0, separatorIndex);\n            }\n            return Extension.disabled.some(val => val === id || (extName && val === extName));\n        }\n        Extension.isDisabled = isDisabled;\n    })(Extension = PageConfig.Extension || (PageConfig.Extension = {}));\n})(PageConfig = exports.PageConfig || (exports.PageConfig = {}));\n//# sourceMappingURL=pageconfig.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathExt = void 0;\nconst path_1 = require(\"path\");\n/**\n * The namespace for path-related functions.\n *\n * Note that Jupyter server paths do not start with a leading slash.\n */\nvar PathExt;\n(function (PathExt) {\n    /**\n     * Join all arguments together and normalize the resulting path.\n     * Arguments must be strings. In v0.8, non-string arguments were silently ignored. In v0.10 and up, an exception is thrown.\n     *\n     * @param paths - The string paths to join.\n     */\n    function join(...paths) {\n        const path = path_1.posix.join(...paths);\n        return path === '.' ? '' : removeSlash(path);\n    }\n    PathExt.join = join;\n    /**\n     * Return the last portion of a path. Similar to the Unix basename command.\n     * Often used to extract the file name from a fully qualified path.\n     *\n     * @param path - The path to evaluate.\n     *\n     * @param ext - An extension to remove from the result.\n     */\n    function basename(path, ext) {\n        return path_1.posix.basename(path, ext);\n    }\n    PathExt.basename = basename;\n    /**\n     * Get the directory name of a path, similar to the Unix dirname command.\n     * When an empty path is given, returns the root path.\n     *\n     * @param path - The file path.\n     */\n    function dirname(path) {\n        const dir = removeSlash(path_1.posix.dirname(path));\n        return dir === '.' ? '' : dir;\n    }\n    PathExt.dirname = dirname;\n    /**\n     * Get the extension of the path.\n     *\n     * @param path - The file path.\n     *\n     * @returns the extension of the file.\n     *\n     * #### Notes\n     * The extension is the string from the last occurrence of the `.`\n     * character to end of string in the last portion of the path, inclusive.\n     * If there is no `.` in the last portion of the path, or if the first\n     * character of the basename of path [[basename]] is `.`, then an\n     * empty string is returned.\n     */\n    function extname(path) {\n        return path_1.posix.extname(path);\n    }\n    PathExt.extname = extname;\n    /**\n     * Normalize a string path, reducing '..' and '.' parts.\n     * When multiple slashes are found, they're replaced by a single one; when the path contains a trailing slash, it is preserved. On Windows backslashes are used.\n     * When an empty path is given, returns the root path.\n     *\n     * @param path - The string path to normalize.\n     */\n    function normalize(path) {\n        if (path === '') {\n            return '';\n        }\n        return removeSlash(path_1.posix.normalize(path));\n    }\n    PathExt.normalize = normalize;\n    /**\n     * Resolve a sequence of paths or path segments into an absolute path.\n     * The root path in the application has no leading slash, so it is removed.\n     *\n     * @param parts - The paths to join.\n     *\n     * #### Notes\n     * The right-most parameter is considered {to}.  Other parameters are considered an array of {from}.\n     *\n     * Starting from leftmost {from} parameter, resolves {to} to an absolute path.\n     *\n     * If {to} isn't already absolute, {from} arguments are prepended in right to left order, until an absolute path is found. If after using all {from} paths still no absolute path is found, the current working directory is used as well. The resulting path is normalized, and trailing slashes are removed unless the path gets resolved to the root directory.\n     */\n    function resolve(...parts) {\n        return removeSlash(path_1.posix.resolve(...parts));\n    }\n    PathExt.resolve = resolve;\n    /**\n     * Solve the relative path from {from} to {to}.\n     *\n     * @param from - The source path.\n     *\n     * @param to - The target path.\n     *\n     * #### Notes\n     * If from and to each resolve to the same path (after calling\n     * path.resolve() on each), a zero-length string is returned.\n     * If a zero-length string is passed as from or to, `/`\n     * will be used instead of the zero-length strings.\n     */\n    function relative(from, to) {\n        return removeSlash(path_1.posix.relative(from, to));\n    }\n    PathExt.relative = relative;\n    /**\n     * Normalize a file extension to be of the type `'.foo'`.\n     *\n     * @param extension - the file extension.\n     *\n     * #### Notes\n     * Adds a leading dot if not present and converts to lower case.\n     */\n    function normalizeExtension(extension) {\n        if (extension.length > 0 && extension.indexOf('.') !== 0) {\n            extension = `.${extension}`;\n        }\n        return extension;\n    }\n    PathExt.normalizeExtension = normalizeExtension;\n    /**\n     * Remove the leading slash from a path.\n     *\n     * @param path: the path from which to remove a leading slash.\n     */\n    function removeSlash(path) {\n        if (path.indexOf('/') === 0) {\n            path = path.slice(1);\n        }\n        return path;\n    }\n    PathExt.removeSlash = removeSlash;\n})(PathExt = exports.PathExt || (exports.PathExt = {}));\n//# sourceMappingURL=path.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Text = void 0;\n/**\n * The namespace for text-related functions.\n */\nvar Text;\n(function (Text) {\n    // javascript stores text as utf16 and string indices use \"code units\",\n    // which stores high-codepoint characters as \"surrogate pairs\",\n    // which occupy two indices in the javascript string.\n    // We need to translate cursor_pos in the Jupyter protocol (in characters)\n    // to js offset (with surrogate pairs taking two spots).\n    const HAS_SURROGATES = '𝐚'.length > 1;\n    /**\n     * Convert a javascript string index into a unicode character offset\n     *\n     * @param jsIdx - The javascript string index (counting surrogate pairs)\n     *\n     * @param text - The text in which the offset is calculated\n     *\n     * @returns The unicode character offset\n     */\n    function jsIndexToCharIndex(jsIdx, text) {\n        if (HAS_SURROGATES) {\n            // not using surrogates, nothing to do\n            return jsIdx;\n        }\n        let charIdx = jsIdx;\n        for (let i = 0; i + 1 < text.length && i < jsIdx; i++) {\n            const charCode = text.charCodeAt(i);\n            // check for surrogate pair\n            if (charCode >= 0xd800 && charCode <= 0xdbff) {\n                const nextCharCode = text.charCodeAt(i + 1);\n                if (nextCharCode >= 0xdc00 && nextCharCode <= 0xdfff) {\n                    charIdx--;\n                    i++;\n                }\n            }\n        }\n        return charIdx;\n    }\n    Text.jsIndexToCharIndex = jsIndexToCharIndex;\n    /**\n     * Convert a unicode character offset to a javascript string index.\n     *\n     * @param charIdx - The index in unicode characters\n     *\n     * @param text - The text in which the offset is calculated\n     *\n     * @returns The js-native index\n     */\n    function charIndexToJsIndex(charIdx, text) {\n        if (HAS_SURROGATES) {\n            // not using surrogates, nothing to do\n            return charIdx;\n        }\n        let jsIdx = charIdx;\n        for (let i = 0; i + 1 < text.length && i < jsIdx; i++) {\n            const charCode = text.charCodeAt(i);\n            // check for surrogate pair\n            if (charCode >= 0xd800 && charCode <= 0xdbff) {\n                const nextCharCode = text.charCodeAt(i + 1);\n                if (nextCharCode >= 0xdc00 && nextCharCode <= 0xdfff) {\n                    jsIdx++;\n                    i++;\n                }\n            }\n        }\n        return jsIdx;\n    }\n    Text.charIndexToJsIndex = charIndexToJsIndex;\n    /**\n     * Given a 'snake-case', 'snake_case', 'snake:case', or\n     * 'snake case' string, will return the camel case version: 'snakeCase'.\n     *\n     * @param str: the snake-case input string.\n     *\n     * @param upper: default = false. If true, the first letter of the\n     * returned string will be capitalized.\n     *\n     * @returns the camel case version of the input string.\n     */\n    function camelCase(str, upper = false) {\n        return str.replace(/^(\\w)|[\\s-_:]+(\\w)/g, function (match, p1, p2) {\n            if (p2) {\n                return p2.toUpperCase();\n            }\n            else {\n                return upper ? p1.toUpperCase() : p1.toLowerCase();\n            }\n        });\n    }\n    Text.camelCase = camelCase;\n    /**\n     * Given a string, title case the words in the string.\n     *\n     * @param str: the string to title case.\n     *\n     * @returns the same string, but with each word capitalized.\n     */\n    function titleCase(str) {\n        return (str || '')\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    }\n    Text.titleCase = titleCase;\n})(Text = exports.Text || (exports.Text = {}));\n//# sourceMappingURL=text.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Time = void 0;\nconst moment_1 = __importDefault(require(\"moment\"));\n/**\n * The namespace for date functions.\n */\nvar Time;\n(function (Time) {\n    /**\n     * Convert a timestring to a human readable string (e.g. 'two minutes ago').\n     *\n     * @param value - The date timestring or date object.\n     *\n     * @returns A formatted date.\n     */\n    function formatHuman(value) {\n        moment_1.default.locale(document.documentElement.lang);\n        let time = moment_1.default(value).fromNow();\n        // FIXME-TRANS: This is not localization friendly!\n        time = time === 'a few seconds ago' ? 'seconds ago' : time;\n        return time;\n    }\n    Time.formatHuman = formatHuman;\n    /**\n     * Convert a timestring to a date format.\n     *\n     * @param value - The date timestring or date object.\n     *\n     * @param format - The format string.\n     *\n     * @returns A formatted date.\n     */\n    function format(value, timeFormat = 'YYYY-MM-DD HH:mm') {\n        return moment_1.default(value).format(timeFormat);\n    }\n    Time.format = format;\n})(Time = exports.Time || (exports.Time = {}));\n//# sourceMappingURL=time.js.map","\"use strict\";\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.URLExt = void 0;\nconst path_1 = require(\"path\");\nconst url_parse_1 = __importDefault(require(\"url-parse\"));\n/**\n * The namespace for URL-related functions.\n */\nvar URLExt;\n(function (URLExt) {\n    /**\n     * Parse a url into a URL object.\n     *\n     * @param urlString - The URL string to parse.\n     *\n     * @returns A URL object.\n     */\n    function parse(url) {\n        if (typeof document !== 'undefined' && document) {\n            const a = document.createElement('a');\n            a.href = url;\n            return a;\n        }\n        return url_parse_1.default(url);\n    }\n    URLExt.parse = parse;\n    /**\n     * Parse URL and retrieve hostname\n     *\n     * @param url - The URL string to parse\n     *\n     * @return a hostname string value\n     */\n    function getHostName(url) {\n        return url_parse_1.default(url).hostname;\n    }\n    URLExt.getHostName = getHostName;\n    function normalize(url) {\n        return url && parse(url).toString();\n    }\n    URLExt.normalize = normalize;\n    /**\n     * Join a sequence of url components and normalizes as in node `path.join`.\n     *\n     * @param parts - The url components.\n     *\n     * @returns the joined url.\n     */\n    function join(...parts) {\n        const u = url_parse_1.default(parts[0], {});\n        const prefix = `${u.protocol}${u.slashes ? '//' : ''}${u.auth}${u.auth ? '@' : ''}${u.host}`;\n        // If there was a prefix, then the first path must start at the root.\n        const path = path_1.posix.join(`${!!prefix && u.pathname[0] !== '/' ? '/' : ''}${u.pathname}`, ...parts.slice(1));\n        return `${prefix}${path === '.' ? '' : path}`;\n    }\n    URLExt.join = join;\n    /**\n     * Encode the components of a multi-segment url.\n     *\n     * @param url - The url to encode.\n     *\n     * @returns the encoded url.\n     *\n     * #### Notes\n     * Preserves the `'/'` separators.\n     * Should not include the base url, since all parts are escaped.\n     */\n    function encodeParts(url) {\n        return join(...url.split('/').map(encodeURIComponent));\n    }\n    URLExt.encodeParts = encodeParts;\n    /**\n     * Return a serialized object string suitable for a query.\n     *\n     * @param object - The source object.\n     *\n     * @returns an encoded url query.\n     *\n     * #### Notes\n     * Modified version of [stackoverflow](http://stackoverflow.com/a/30707423).\n     */\n    function objectToQueryString(value) {\n        const keys = Object.keys(value).filter(key => key.length > 0);\n        if (!keys.length) {\n            return '';\n        }\n        return ('?' +\n            keys\n                .map(key => {\n                const content = encodeURIComponent(String(value[key]));\n                return key + (content ? '=' + content : '');\n            })\n                .join('&'));\n    }\n    URLExt.objectToQueryString = objectToQueryString;\n    /**\n     * Return a parsed object that represents the values in a query string.\n     */\n    function queryStringToObject(value) {\n        return value\n            .replace(/^\\?/, '')\n            .split('&')\n            .reduce((acc, val) => {\n            const [key, value] = val.split('=');\n            if (key.length > 0) {\n                acc[key] = decodeURIComponent(value || '');\n            }\n            return acc;\n        }, {});\n    }\n    URLExt.queryStringToObject = queryStringToObject;\n    /**\n     * Test whether the url is a local url.\n     *\n     * #### Notes\n     * This function returns `false` for any fully qualified url, including\n     * `data:`, `file:`, and `//` protocol URLs.\n     */\n    function isLocal(url) {\n        const { protocol } = parse(url);\n        return ((!protocol || url.toLowerCase().indexOf(protocol) !== 0) &&\n            url.indexOf('/') !== 0);\n    }\n    URLExt.isLocal = isLocal;\n})(URLExt = exports.URLExt || (exports.URLExt = {}));\n//# sourceMappingURL=url.js.map","var map = {\n\t\"./af\": 1009,\n\t\"./af.js\": 1009,\n\t\"./ar\": 88769,\n\t\"./ar-dz\": 23739,\n\t\"./ar-dz.js\": 23739,\n\t\"./ar-kw\": 93745,\n\t\"./ar-kw.js\": 93745,\n\t\"./ar-ly\": 99576,\n\t\"./ar-ly.js\": 99576,\n\t\"./ar-ma\": 67408,\n\t\"./ar-ma.js\": 67408,\n\t\"./ar-sa\": 48781,\n\t\"./ar-sa.js\": 48781,\n\t\"./ar-tn\": 87856,\n\t\"./ar-tn.js\": 87856,\n\t\"./ar.js\": 88769,\n\t\"./az\": 2030,\n\t\"./az.js\": 2030,\n\t\"./be\": 56476,\n\t\"./be.js\": 56476,\n\t\"./bg\": 25304,\n\t\"./bg.js\": 25304,\n\t\"./bm\": 48125,\n\t\"./bm.js\": 48125,\n\t\"./bn\": 34,\n\t\"./bn-bd\": 29835,\n\t\"./bn-bd.js\": 29835,\n\t\"./bn.js\": 34,\n\t\"./bo\": 64082,\n\t\"./bo.js\": 64082,\n\t\"./br\": 8317,\n\t\"./br.js\": 8317,\n\t\"./bs\": 93107,\n\t\"./bs.js\": 93107,\n\t\"./ca\": 68272,\n\t\"./ca.js\": 68272,\n\t\"./cs\": 98567,\n\t\"./cs.js\": 98567,\n\t\"./cv\": 61583,\n\t\"./cv.js\": 61583,\n\t\"./cy\": 10076,\n\t\"./cy.js\": 10076,\n\t\"./da\": 31760,\n\t\"./da.js\": 31760,\n\t\"./de\": 8973,\n\t\"./de-at\": 63214,\n\t\"./de-at.js\": 63214,\n\t\"./de-ch\": 74728,\n\t\"./de-ch.js\": 74728,\n\t\"./de.js\": 8973,\n\t\"./dv\": 54053,\n\t\"./dv.js\": 54053,\n\t\"./el\": 7499,\n\t\"./el.js\": 7499,\n\t\"./en-au\": 67876,\n\t\"./en-au.js\": 67876,\n\t\"./en-ca\": 47010,\n\t\"./en-ca.js\": 47010,\n\t\"./en-gb\": 34239,\n\t\"./en-gb.js\": 34239,\n\t\"./en-ie\": 99830,\n\t\"./en-ie.js\": 99830,\n\t\"./en-il\": 28438,\n\t\"./en-il.js\": 28438,\n\t\"./en-in\": 25322,\n\t\"./en-in.js\": 25322,\n\t\"./en-nz\": 43264,\n\t\"./en-nz.js\": 43264,\n\t\"./en-sg\": 55449,\n\t\"./en-sg.js\": 55449,\n\t\"./eo\": 39486,\n\t\"./eo.js\": 39486,\n\t\"./es\": 32430,\n\t\"./es-do\": 16310,\n\t\"./es-do.js\": 16310,\n\t\"./es-mx\": 27038,\n\t\"./es-mx.js\": 27038,\n\t\"./es-us\": 73099,\n\t\"./es-us.js\": 73099,\n\t\"./es.js\": 32430,\n\t\"./et\": 34975,\n\t\"./et.js\": 34975,\n\t\"./eu\": 87063,\n\t\"./eu.js\": 87063,\n\t\"./fa\": 68073,\n\t\"./fa.js\": 68073,\n\t\"./fi\": 50957,\n\t\"./fi.js\": 50957,\n\t\"./fil\": 8764,\n\t\"./fil.js\": 8764,\n\t\"./fo\": 81775,\n\t\"./fo.js\": 81775,\n\t\"./fr\": 74179,\n\t\"./fr-ca\": 14306,\n\t\"./fr-ca.js\": 14306,\n\t\"./fr-ch\": 73791,\n\t\"./fr-ch.js\": 73791,\n\t\"./fr.js\": 74179,\n\t\"./fy\": 47014,\n\t\"./fy.js\": 47014,\n\t\"./ga\": 46911,\n\t\"./ga.js\": 46911,\n\t\"./gd\": 62958,\n\t\"./gd.js\": 62958,\n\t\"./gl\": 87344,\n\t\"./gl.js\": 87344,\n\t\"./gom-deva\": 33161,\n\t\"./gom-deva.js\": 33161,\n\t\"./gom-latn\": 35798,\n\t\"./gom-latn.js\": 35798,\n\t\"./gu\": 68485,\n\t\"./gu.js\": 68485,\n\t\"./he\": 27917,\n\t\"./he.js\": 27917,\n\t\"./hi\": 52159,\n\t\"./hi.js\": 52159,\n\t\"./hr\": 95842,\n\t\"./hr.js\": 95842,\n\t\"./hu\": 30005,\n\t\"./hu.js\": 30005,\n\t\"./hy-am\": 51312,\n\t\"./hy-am.js\": 51312,\n\t\"./id\": 60781,\n\t\"./id.js\": 60781,\n\t\"./is\": 64101,\n\t\"./is.js\": 64101,\n\t\"./it\": 43467,\n\t\"./it-ch\": 4759,\n\t\"./it-ch.js\": 4759,\n\t\"./it.js\": 43467,\n\t\"./ja\": 44164,\n\t\"./ja.js\": 44164,\n\t\"./jv\": 70079,\n\t\"./jv.js\": 70079,\n\t\"./ka\": 57036,\n\t\"./ka.js\": 57036,\n\t\"./kk\": 92022,\n\t\"./kk.js\": 92022,\n\t\"./km\": 63418,\n\t\"./km.js\": 63418,\n\t\"./kn\": 43655,\n\t\"./kn.js\": 43655,\n\t\"./ko\": 30986,\n\t\"./ko.js\": 30986,\n\t\"./ku\": 91902,\n\t\"./ku.js\": 91902,\n\t\"./ky\": 4604,\n\t\"./ky.js\": 4604,\n\t\"./lb\": 99026,\n\t\"./lb.js\": 99026,\n\t\"./lo\": 20537,\n\t\"./lo.js\": 20537,\n\t\"./lt\": 22288,\n\t\"./lt.js\": 22288,\n\t\"./lv\": 1495,\n\t\"./lv.js\": 1495,\n\t\"./me\": 60690,\n\t\"./me.js\": 60690,\n\t\"./mi\": 2571,\n\t\"./mi.js\": 2571,\n\t\"./mk\": 93959,\n\t\"./mk.js\": 93959,\n\t\"./ml\": 97225,\n\t\"./ml.js\": 97225,\n\t\"./mn\": 88,\n\t\"./mn.js\": 88,\n\t\"./mr\": 46622,\n\t\"./mr.js\": 46622,\n\t\"./ms\": 11070,\n\t\"./ms-my\": 48899,\n\t\"./ms-my.js\": 48899,\n\t\"./ms.js\": 11070,\n\t\"./mt\": 63931,\n\t\"./mt.js\": 63931,\n\t\"./my\": 95393,\n\t\"./my.js\": 95393,\n\t\"./nb\": 10627,\n\t\"./nb.js\": 10627,\n\t\"./ne\": 8914,\n\t\"./ne.js\": 8914,\n\t\"./nl\": 33114,\n\t\"./nl-be\": 68479,\n\t\"./nl-be.js\": 68479,\n\t\"./nl.js\": 33114,\n\t\"./nn\": 4513,\n\t\"./nn.js\": 4513,\n\t\"./oc-lnc\": 46549,\n\t\"./oc-lnc.js\": 46549,\n\t\"./pa-in\": 28264,\n\t\"./pa-in.js\": 28264,\n\t\"./pl\": 32848,\n\t\"./pl.js\": 32848,\n\t\"./pt\": 90899,\n\t\"./pt-br\": 55077,\n\t\"./pt-br.js\": 55077,\n\t\"./pt.js\": 90899,\n\t\"./ro\": 92512,\n\t\"./ro.js\": 92512,\n\t\"./ru\": 21753,\n\t\"./ru.js\": 21753,\n\t\"./sd\": 16840,\n\t\"./sd.js\": 16840,\n\t\"./se\": 78362,\n\t\"./se.js\": 78362,\n\t\"./si\": 50464,\n\t\"./si.js\": 50464,\n\t\"./sk\": 66324,\n\t\"./sk.js\": 66324,\n\t\"./sl\": 41963,\n\t\"./sl.js\": 41963,\n\t\"./sq\": 53039,\n\t\"./sq.js\": 53039,\n\t\"./sr\": 93454,\n\t\"./sr-cyrl\": 10466,\n\t\"./sr-cyrl.js\": 10466,\n\t\"./sr.js\": 93454,\n\t\"./ss\": 95158,\n\t\"./ss.js\": 95158,\n\t\"./sv\": 28859,\n\t\"./sv.js\": 28859,\n\t\"./sw\": 57594,\n\t\"./sw.js\": 57594,\n\t\"./ta\": 26915,\n\t\"./ta.js\": 26915,\n\t\"./te\": 15677,\n\t\"./te.js\": 15677,\n\t\"./tet\": 92154,\n\t\"./tet.js\": 92154,\n\t\"./tg\": 74098,\n\t\"./tg.js\": 74098,\n\t\"./th\": 89071,\n\t\"./th.js\": 89071,\n\t\"./tk\": 49381,\n\t\"./tk.js\": 49381,\n\t\"./tl-ph\": 1869,\n\t\"./tl-ph.js\": 1869,\n\t\"./tlh\": 92346,\n\t\"./tlh.js\": 92346,\n\t\"./tr\": 71483,\n\t\"./tr.js\": 71483,\n\t\"./tzl\": 30266,\n\t\"./tzl.js\": 30266,\n\t\"./tzm\": 33138,\n\t\"./tzm-latn\": 32960,\n\t\"./tzm-latn.js\": 32960,\n\t\"./tzm.js\": 33138,\n\t\"./ug-cn\": 67779,\n\t\"./ug-cn.js\": 67779,\n\t\"./uk\": 50805,\n\t\"./uk.js\": 50805,\n\t\"./ur\": 61127,\n\t\"./ur.js\": 61127,\n\t\"./uz\": 29628,\n\t\"./uz-latn\": 80840,\n\t\"./uz-latn.js\": 80840,\n\t\"./uz.js\": 29628,\n\t\"./vi\": 56962,\n\t\"./vi.js\": 56962,\n\t\"./x-pseudo\": 49257,\n\t\"./x-pseudo.js\": 49257,\n\t\"./yo\": 62423,\n\t\"./yo.js\": 62423,\n\t\"./zh-cn\": 61002,\n\t\"./zh-cn.js\": 61002,\n\t\"./zh-hk\": 6046,\n\t\"./zh-hk.js\": 6046,\n\t\"./zh-mo\": 36903,\n\t\"./zh-mo.js\": 36903,\n\t\"./zh-tw\": 24710,\n\t\"./zh-tw.js\": 24710\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 95126;","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n"],"names":["Object","defineProperty","exports","value","ActivityMonitor","signaling_1","constructor","options","this","_timer","_timeout","_isDisposed","_activityStopped","Signal","signal","connect","_onSignalFired","timeout","activityStopped","isDisposed","dispose","clearData","sender","args","clearTimeout","_sender","_args","setTimeout","emit","__createBinding","create","o","m","k","k2","undefined","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","MarkdownCodeBlocks","CODE_BLOCK_MARKER","markdownExtensions","MarkdownCodeBlock","startLine","code","endLine","isMarkdown","extension","indexOf","findMarkdownCodeBlocks","text","lines","split","codeBlocks","currentBlock","lineIndex","length","line","lineContainsMarker","constructingBlock","push","firstIndex","lastIndex","lastIndexOf","substring","__importDefault","mod","__esModule","PageConfig","coreutils_1","minimist_1","url_1","getOption","name","configData","getBodyData","found","document","el","getElementById","JSON","parse","textContent","process","argv","cli","default","slice","path","fullPath","resolve","eval","e","console","error","JSONExt","isObject","key","stringify","setOption","last","getBaseUrl","URLExt","normalize","getTreeUrl","join","getShareUrl","getTreeShareUrl","getUrl","_a","_b","_c","_d","toShare","mode","workspace","labOrDoc","defaultWorkspace","encodeURIComponent","treePath","encodeParts","getWsUrl","baseUrl","wsUrl","getNBConvertURL","format","download","notebookPath","url","getToken","getNotebookVersion","notebookVersion","Extension","body","val","dataset","decodeURIComponent","populate","raw","warn","deferred","disabled","isDeferred","id","separatorIndex","extName","some","isDisabled","PathExt","path_1","removeSlash","paths","posix","basename","ext","dirname","dir","extname","parts","relative","from","to","normalizeExtension","Text","HAS_SURROGATES","jsIndexToCharIndex","jsIdx","charIdx","i","charCode","charCodeAt","nextCharCode","charIndexToJsIndex","camelCase","str","upper","replace","match","p1","p2","toUpperCase","toLowerCase","titleCase","map","word","charAt","Time","moment_1","formatHuman","locale","documentElement","lang","time","fromNow","timeFormat","url_parse_1","a","createElement","href","u","prefix","protocol","slashes","auth","host","pathname","getHostName","hostname","toString","objectToQueryString","keys","filter","content","String","queryStringToObject","reduce","acc","isLocal","webpackContext","req","webpackContextResolve","__webpack_require__","Error","module","required","qs","controlOrWhitespace","CRHTLF","port","protocolre","windowsDriveLetter","trimLeft","rules","address","isSpecial","NaN","ignore","hash","query","lolcation","loc","location","window","g","self","finaldestination","type","Url","unescape","test","scheme","extractProtocol","rest","exec","forwardSlashes","otherSlashes","slashesCount","parser","extracted","instruction","index","instructions","base","concat","unshift","up","splice","username","password","origin","set","part","fn","pop","char","ins","result"],"sourceRoot":""}